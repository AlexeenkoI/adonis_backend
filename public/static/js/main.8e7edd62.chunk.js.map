{"version":3,"sources":["reducers/User.js","reducers/Contracts.js","reducers/Notifications.js","reducers/UserList.js","reducers/Customers.js","reducers/Settings.js","reducers/index.js","actions/LoginActions.js","components/AuthWindow.js","components/Preloader.js","actions/WorkSheetActions.js","actions/UserListActions.js","actions/CustomersActions.js","actions/SettingsActions.js","components/Filters.js","components/WorkSheet.js","components/LeftMenu.js","components/forms/UserEdit.js","components/UsersList.js","components/small/LoggedUser.js","components/small/Notificator.js","components/forms/FieldWrapper.js","components/forms/CustomerEdit.js","components/CustomersList.js","components/forms/CreateContractForm.js","components/small/FileUploader.js","components/forms/ContractEdit.js","components/forms/SettingsEditor.js","components/NotMatch.js","components/HomePage.js","components/TopCrumbs.js","components/settings/SettingsList.js","actions/NotificationsActions.js","components/MainOffice.js","App.js","registerServiceWorker.js","index.js"],"names":["initialState","name","status","loggedIn","isFetching","errMsg","referer","isLoaded","page","limit","filters","address","contract_number","date_started","date_deadline","customer","customer_id","contractor","type_of_work","whereString","filterData","types","users","contractors","data","contractLoading","contractIsUpdated","currentContract","currentContractFiles","filesIsLoading","contractsNotifications","count","currentUserId","isLoading","currentUserData","role","searchData","offset","userIsLoading","loading","loaded","currentCustomer","updating","lastInsertId","settings_loaded","description","work_types","user_roles","status_types","newData","settingsUpdating","rootReducer","combineReducers","user","state","arguments","length","undefined","action","type","Object","objectSpread","console","log","id","surename","role_id","userRoles","contracts","total","pageNum","newFilters","filter","concat","toConsumableArray","file","notifications","newCount","notificationData","userList","json","conType","value","form","formReducer","customersList","searchString","settings","itemType","itemPos","itemField","newRow","LOGIN_ATTEMPT","LOGIN_SUCCESS","LOGIN_FAIL","LOGOUT","tryToLogin","auth","pass","isRemember","dispatch","reqBody","login","password","fetch","headers","Accept","Content-Type","method","body","JSON","stringify","then","response","success","localStorage","setItem","auth_token","message","successLogin","errorLogin","error","catch","err","incData","msg","FormItem","Form","Item","formItemLayout","labelCol","span","wrapperCol","AuthWindow","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleSubmit","e","preventDefault","validateFields","values","location","from","redirectTo","pathname","loginAction","userName","remember","bind","assertThisInitialized","autoLogIn","document","style","backgroundColor","getItem","parse","matches","cookie","match","RegExp","replace","decodeURIComponent","getFieldDecorator","react_default","a","createElement","className","es_form","onSubmit","layout","rules","required","es_input","prefix","icon","color","placeholder","valuePropName","initialValue","es_checkbox","es_button","htmlType","userData","Component","WrappedNormalLoginForm","create","withRouter","connect","store","Preloader","spin","size","START_GET_CONTRACTS","RECIEVE_CONTRACTS","ERROR_RECIEVE_CONTRACTS","SET_FILTERS","APPLY_FILTERS","RECIEVE_FILTER_VALUES","START_GET_CONTRACT_DATA","RECIEVE_CONTRACT_DATA","getContracts","userId","token","Authorization","res","recieveContracts","errorGettingContracts","setFilters","applyFilters","moment","format","setPage","getFilterData","getContract","contractId","fileListLoaded","warning","updateContract","formData","GET_USERS_LIST","RECIEVE_USERS_LIST","GET_USER","RECIEVE_USER","CLEAR_CURRENT_USER","ADD_CONDITION","CLEAR_SEARCH_STRING","getUserList","condition","getUser","currUserId","incUserId","recieveUser","updatedUser","incId","messasge","rerenderUser","getCustomersList","uId","recieveCustomersList","toString","getCurrentCustomer","customerId","recieveCustomer","updateCustomer","str","insertId","insertCustomer","finishLoading","clearRow","getSettings","warn","startUpdate","finishUpdate","Filters","handeSubmit","applyData","handleInputChange","parameter","target","handleContractorChange","handleStatusChange","handleCustomerChange","clearSearchString","handleDateFrom","date","setDate","handleDateTo","resetFilters","_this2","collapse","bordered","Panel","header","row","gutter","col","Filters_FormItem","label","es_select","showSearch","width","defaultValue","onChange","filterOption","input","option","children","toLowerCase","indexOf","Option","key","map","usr","suffix","theme","onClick","item","date_picker","defaultActiveFirstOption","customers","firstname","secondname","loadingState","WorkSheet","handleSearch","selectedKeys","applyFilter","handleReset","clearFilters","resetFilter","onPaginationChange","_this$props","current","pageSize","onPageSizeChange","setLimit","onCalendarChange","string","onRecordClick","recoordId","_this$props2","setState","isModalOn","closeModalClick","onContractFormSubmit","_this$props3","searchText","_this$props4","getUsers","getCustomers","loadSettings","prevProps","_this$props5","columns","title","dataIndex","render","_","record","customerData","find","work_type","menu","es_menu","dropdown","overlay","text","Link","to","components_Filters","table","rowKey","dataSource","rowClassName","index","pagination","showSizeChanger","onShowSizeChange","locale","emptyText","modal","footer","visible","onCancel","components_Preloader","Sider","Layout","SubMenu","Menu","LeftMenu","collapsed","trigger","collapsible","src","alt","mode","history","NavLink","exact","activeClassName","defaultGrid","xs","sm","md","lg","xl","makeField","_ref","meta","hasFeedback","rest","objectWithoutProperties","hasError","touched","invalid","UserEdit_FormItem","assign","validateStatus","help","AInput","Input","ACheckbox","Checkbox","ASelect","Select","UserEdit","updateOne","createOne","re_password","status_text","is_active","role_data","needToRedirect","getOne","params","pristine","submitting","userFetch","grid","initialValues","Redirect","justify","Field","component","userStatus","role_name","border","disabled","ownProps","gridSettings","insertUser","reduxForm","validate","errors","test","enableReinitialize","destroyOnUnmount","Search","UsersList","toggleDrawer","getCurrentUser","closeDrawer","deleteAction","delId","deleteById","createAction","clearForm","submitSearch","addCond","checked","titleString","popconfirm","onConfirm","onSearch","maxWidth","enterButton","drawer","placement","closable","onClose","destroyOnClose","divider","forms_UserEdit","authUserId","authorizeId","addCondition","resetSearch","deleteId","deleteUserId","deleteUser","LoggedUser","handleClick","loadProfile","cancelModal","onFormSubmit","dropDownMenu","logOut","avatar","shape","padding","ownProfile","Notificator","handleVisibleChange","viewHandler","content","popover","onVisibleChange","badge","fontSize","cursor","marginLeft","FieldWrapper","FieldWrapper_FormItem","CustomerEdit","submitForm","insertOne","callback","needRedirect","keys","clearAll","noRedirect","fetching","addonBefore","newForm","contractStatuses","statuses","onAdd","uid","phone","CustomersList","_Component","componentWillMount","openDetail","getCustomer","openModal","closeModal","clearSearch","handleFormSubmit","deleteOne","_this$props6","setCondition","_this$props7","inherits","createClass","_this$props8","react","CustomersList_Search","forms_CustomerEdit","searchStr","deleteCustomer","setSearch","Step","Steps","ATextArea","TextArea","DateWrapper","CreateContractForm_FormItem","CreateContractForm","increaseStep","step","decreaseStep","toggleCreateCustomersForm","showCustomersForm","sendValues","openForm","workTypes","steps","disabledDate","valueOf","Date","now","marginRight","display","marginTop","addonAfter","st","notification","open","duration","createContract","price","paid","FileUploader","download","link","blob","URL","createObjectURL","url","window","revokeObjectURL","preview","actionUrl","callbackUploader","callbackRemover","files","upload","multiple","upload_contract","defaultFileList","onRemove","openFileDialogOnClick","ContractEdit_FormItem","MultipleSelectWrapper","_ref2","ContractEdit","loadFileList","uploadFiles","handleUpload","fileList","fileName","storagePath","tmpPath","hasOwnProperty","fileUpload","handleRemove","removeFile","updateFileList","removeFiles","cReq","custom_id","leaveContract","clearFileList","contractFetching","filesLoading","disabler","rows","small_FileUploader","uploadAction","tv","fileUploaded","filePath","SettingsEditor","apply","setFieldValue","createRow","performInsert","performUpdate","pos","field","SettingsEditor_FormItem","updateValue","settingType","insertValues","insertSetting","setting","updId","updateSetting","NotMatch","HomePage","menuMap","/users","/users/edit","/users/create","/customers","/customers/edit","/customers/createcustomer","/contracts","/contracts/edit","/contracts/create","/settings","/settings/work_types","/settings/user_roles","/settings/status_types","TopCrumbs","pathSnippets","split","i","extraBreadcrumbItems","slice","join","breadcrumb","breadcrumbItems","separator","SettingsList","Meta","Card","flexWrap","card","margin","actions","hoverable","minHeight","GET_CONTRACT_NOTIFICATION","NOTIFICATION_VIEWED","Header","Content","ws","Ws","MainOffice","isLogged","toggle","handleProfileSubmit","changeProfileData","currentUser","withJwtToken","subscribe","on","recieveContractNotification","emit","Route","path","components_LeftMenu","background","align","small_Notificator","small_LoggedUser","logout","getProfileData","userProfile","isLoadingProfile","components_TopCrumbs","Switch","removeItem","profileId","App","locale_provider","ru_RU","components_MainOffice","isLocalhost","Boolean","hostname","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","createHistory","createStore","applyMiddleware","thunkMiddleware","ReactDOM","es","BrowserRouter","src_App_0","getElementById","process","origin","addEventListener","get","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.8e7edd62.chunk.js","sourcesContent":["\r\nconst initialState = {\r\n    name: '',\r\n    status : '',\r\n    loggedIn : false,\r\n    isFetching : false,\r\n    errMsg:'',\r\n    referer : '/'\r\n  }\r\n  \r\n  export function userReducer(state = initialState, action) {\r\n    switch(action.type){\r\n      case 'LOGIN_ATTEMPT':\r\n        return {\r\n          ...state,\r\n          isFetching : true\r\n        }\r\n      case 'LOGIN_SUCCESS':\r\n      console.log('login success');\r\n      console.log(action);\r\n        return{\r\n          ...state,\r\n          loggedIn : true,\r\n          isFetching : false,\r\n          id : action.data.id,\r\n          name : action.data.name,\r\n          surename : action.data.surename,\r\n          status : action.data.status,\r\n          role : action.data.role_id,\r\n          userRoles : action.userRoles,\r\n          referer : action.referer\r\n        }\r\n      case 'LOGIN_FAIL':\r\n        return {\r\n          ...state,\r\n          isFetching : false,\r\n          errMsg : action.data.errMsg\r\n        }\r\n      case 'LOGOUT' : \r\n        return {\r\n          ...state,\r\n          loggedIn : false\r\n        }\r\n      case 'REINIT_USER' :\r\n        return {\r\n          ...state,\r\n          name : action.data.name,\r\n          surename : action.data.surename,\r\n          status : action.data.status,\r\n          role : action.data.role\r\n        }\r\n      default:\r\n        return state\r\n    }\r\n    \r\n  }","const initialState = {\r\n    isLoaded : false,\r\n    isFetching : false,\r\n    page : 1,\r\n    limit : 10,\r\n    filters : {\r\n      address : \"\",\r\n      contract_number : \"\",\r\n      date_started : \"\",\r\n      date_deadline : \"\",\r\n      customer : \"\",\r\n      customer_id : \"\",\r\n      contractor : \"\",\r\n      status : \"\",\r\n      type_of_work : \"\",\r\n      whereString : \"\",\r\n    },\r\n    filterData : {\r\n      types : [],\r\n      users : [],\r\n      contractors : []\r\n    },\r\n    data : [],\r\n    contractLoading: false,\r\n    contractIsUpdated : false,\r\n    currentContract : {},\r\n    currentContractFiles : [],\r\n    filesIsLoading : false\r\n  }\r\n  \r\n  export function contractsReducer(state = initialState, action) {\r\n    switch(action.type){\r\n      case 'START_GET_CONTRACTS':\r\n        return {\r\n          ...state,\r\n          isFetching : true\r\n        }\r\n      case 'RECIEVE_CONTRACTS':\r\n        return {\r\n          ...state,\r\n          isLoaded : true,\r\n          isFetching : false,\r\n          //page : action.lastPage ? action.lastPage : action.page,\r\n          page : action.page,\r\n          data : action.data,\r\n          total : action.total\r\n        }\r\n      case 'PAGE_CHANGE':\r\n        return {\r\n          ...state,\r\n          page : action.pageNum\r\n        }\r\n      case 'SET_LIMIT':\r\n        return {\r\n          ...state,\r\n          limit : action.limit\r\n        }\r\n      case 'ERROR_RECIEVE_CONTRACTS':\r\n        return {\r\n          ...state,\r\n          isLoaded : false,\r\n          isFetching : false,\r\n        }\r\n      case 'SET_FILTERS' :\r\n        let newFilters = state.filters;\r\n        newFilters[action.name] = action.filter;\r\n        return {\r\n          ...state,\r\n          isFetching : false,\r\n          filters : newFilters\r\n        }\r\n      case 'APPLY_FILTERS' :\r\n        return {\r\n          ...state,\r\n          isFetching: true,\r\n        }\r\n      case 'RECIEVE_FILTER_VALUES' : \r\n        return {\r\n          ...state,\r\n          filterData : {\r\n            types : action.types,\r\n            users : action.users\r\n          }\r\n        }\r\n      case 'START_GET_CONTRACT_DATA' :\r\n        return {\r\n          ...state,\r\n          contractLoading : true,\r\n        }\r\n      case 'RECIEVE_CONTRACT_DATA' :\r\n        const currentContract = action.data;\r\n        return {\r\n          ...state,\r\n          contractLoading : false,\r\n          currentContract \r\n        }\r\n      case 'CONTRACT_UPDATED':\r\n        return {\r\n          ...state,\r\n          contractIsUpdated : true\r\n        }\r\n      case 'CONTRACT_LEAVED' : \r\n        return {\r\n          ...state,\r\n          contractIsUpdated : false\r\n        }\r\n      case 'FILE_UPLOADED' : \r\n        return {\r\n          ...state,\r\n          currentContractFiles : [\r\n            ...state,\r\n            action.file\r\n          ]\r\n        }\r\n      case 'START_FILES_LOADING' : \r\n        return {\r\n          ...state,\r\n          filesIsLoading : true\r\n        }\r\n      case 'FILE_LIST_LOADED' : \r\n        return {\r\n          ...state,\r\n          filesIsLoading : false,\r\n          currentContractFiles : action.data\r\n        }\r\n      case 'CLEAR_FILE_LIST' : \r\n        return {\r\n          ...state,\r\n          currentContractFiles : []\r\n        }\r\n      default:\r\n        return state;\r\n    }\r\n  }","const initialState = {\r\n  contractsNotifications : {\r\n    count : 0,\r\n    data : []\r\n  }\r\n}\r\n\r\nexport function notificationsReducer(state=initialState  ,action){\r\n  switch(action.type){\r\n    case 'GET_CONTRACT_NOTIFICATION':\r\n      console.log(action);\r\n      const newCount = state.contractsNotifications.count + 1;\r\n      console.log('count');\r\n      console.log(newCount);\r\n      return {\r\n        ...state,\r\n        contractsNotifications:{\r\n            count : newCount,\r\n            //data : [...state.contractsNotifications.data, action.notificationData.data]\r\n            data : state.contractsNotifications.data.concat(action.notificationData)\r\n        }\r\n      }\r\n    case 'NOTIFICATION_VIEWED' : \r\n      return {\r\n        ...state,\r\n        contractsNotifications : {\r\n          count : 0,\r\n          data : state.contractsNotifications.data\r\n        }\r\n      }\r\n    default:\r\n      return state\r\n  }\r\n}","const initialState= {\r\n  currentUserId : '',\r\n  isLoading : true,\r\n  currentUserData : {\r\n    role : 0\r\n  },\r\n  count : 0,\r\n  page : 1,\r\n  searchData : {\r\n    whereString : '',\r\n    limit : 10,\r\n    offset : 0\r\n  },\r\n  userIsLoading : false,\r\n  data : []\r\n}\r\n\r\nexport function userListReducer(state = initialState, action){\r\n  switch(action.type){\r\n    case 'GET_USERS_LIST':\r\n      return {\r\n        ...state,\r\n        isLoading : true\r\n      }\r\n    case 'RECIEVE_USERS_LIST':\r\n      return {\r\n        ...state,\r\n        isLoading : false,\r\n        data : action.data.data.data,\r\n        count : action.data.total\r\n      }\r\n    case 'RECIEVE_USER':\r\n      const currentUserData = action.json.data;\r\n      const userRoles = action.json.userRoles;\r\n      return {\r\n        ...state,\r\n        userIsLoading : false,\r\n        currentUserData,\r\n        userRoles\r\n      }\r\n    case 'ADD_CONDITION':\r\n      let newData = state.searchData;\r\n      newData[action.conType] = action.value;\r\n      return {\r\n        ...state,\r\n        searchData : newData\r\n      }\r\n    case 'SET_PAGE':\r\n      return {\r\n        ...state,\r\n        page : action.page\r\n      }\r\n    case 'GET_USER':\r\n      return{\r\n        ...state,\r\n        userIsLoading : true,\r\n      }\r\n    case 'CLEAR_CURRENT_USER':\r\n      return {\r\n        ...state,\r\n        currentUserData : {}\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","const initialState = {\r\n  loading: false,\r\n  loaded : false,\r\n  count : 0,\r\n  page : 1,\r\n  data : [],\r\n  searchData:{\r\n    whereString : '',\r\n    limit : 10,\r\n    offset : 0\r\n  },\r\n  currentCustomer : {},\r\n  updating : false,\r\n  lastInsertId : ''\r\n}\r\nexport const GET_CUSTOMERS_LIST = 'GET_CUSTOMERS_LIST';\r\nexport const RECIEVE_CUSTOMERS_LIST ='RECIEVE_CUSTOMERS_LIST';\r\nexport const GET_CUSTOMER = 'GET_CUSTOMER';\r\nexport const RECIEVE_CUSTOMER = 'RECIEVE_CUSTOMER';\r\nexport const UPDATE_CUSTOMER = 'UPDATE_CUSTOMER';\r\nexport const DELETE_CUSTOMER = 'DELETE_CUSTOMER';\r\nexport const CREATE_CUSTOMER = 'CREATE_CUSTOMER';\r\n\r\n\r\nexport function customersReducer(state = initialState, action){\r\n  switch(action.type){\r\n    case 'GET_CUSTOMERS_LIST' :\r\n      return {\r\n        ...state,\r\n        loading : true\r\n      };\r\n    case 'RECIEVE_CUSTOMERS_LIST' :\r\n      return {\r\n        ...state,\r\n        loading : false,\r\n        loaded : true,\r\n        page : action.data.data.page,\r\n        data : action.data.data.data,\r\n        count : action.data.data.total\r\n      }; \r\n    case 'RECIEVE_CUSTOMER' :\r\n      return {\r\n        ...state,\r\n        currentCustomer : action.data\r\n      };\r\n    case 'CREATE_CUSTOMER' : \r\n      return state;\r\n    case 'ADD_CONDITION':\r\n      let newData = state.searchData;\r\n      newData[action.conType] = action.value;\r\n      return {\r\n        ...state,\r\n        searchData : newData\r\n      }\r\n    case 'SET_PAGE' : \r\n      return {\r\n        ...state,\r\n        page : action.page\r\n      }\r\n    case 'INSERTING_OR_UPDATING':\r\n      return {\r\n        ...state,\r\n        updating : true,\r\n      }\r\n    case 'FINISH_INSERTING':\r\n      return{\r\n        ...state,\r\n        updating : false,\r\n        lastInsertId : action.data\r\n      }\r\n    case 'CLEAR_LAST_INSERTED' : \r\n      return {\r\n        ...state,\r\n        updating : false,\r\n        currentCustomer : {},\r\n        lastInsertId : ''\r\n      }\r\n    case 'RESET_SEARCH_STRING' : \r\n      return {\r\n        ...state,\r\n        searchString : ''\r\n      }\r\n    case 'ERROR_RECIEVE' : \r\n      return {\r\n        ...state,\r\n        loading : false\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","const initialState = {\r\n  settings_loaded : false,\r\n  loading : false,\r\n  description : {\r\n    work_types : { name : \"Виды работ\", description : \"Виды выполняемых работ\"},\r\n    user_roles : { name : \"Роли в системе\", description : \"Роли и уровни доступа в электронном офисе\"},\r\n    status_types : { name : \"Статусы заявлений\", description : \"Статусы в которых могут находиться заявления\"}\r\n  },\r\n  data : {\r\n    work_types : [\r\n\r\n    ],\r\n    user_roles : [\r\n\r\n    ],\r\n    status_types : [\r\n\r\n    ]\r\n  },\r\n  newData : {},\r\n  settingsUpdating : false\r\n}\r\n\r\nexport function settingsReducer(state = initialState, action) {\r\n  switch(action.type){\r\n    case \"CHANGE_VALUE\" : \r\n      let newData = state.data;\r\n      newData[action.itemType][action.itemPos][action.itemField] = action.value;\r\n      return {\r\n        ...state,\r\n        newData\r\n      }\r\n    case \"CREATE_VALUE\" : \r\n      let newRow = {};\r\n     // const key = \"table\";\r\n     // newRow[key] = action.itemType;\r\n      newRow[action.itemField] = action.value;\r\n      return {\r\n        ...state,\r\n        newData : newRow\r\n      }\r\n    case \"CLEAR_ROW\" : \r\n      return {\r\n        ...state,\r\n        newData : {}\r\n      }\r\n    case \"START_UPDATE\" : \r\n      return {\r\n        ...state,\r\n        settingsUpdating : true\r\n      }\r\n    case \"FINISH_UPDATE\" : \r\n      return {\r\n        ...state,\r\n        settingsUpdating : false\r\n      }\r\n    case \"START_LOADING\" : \r\n      return {\r\n        ...state,\r\n        loading : true\r\n      }\r\n    case \"SETTINGS_LOADED\" : \r\n      const data = action.data;\r\n      return {\r\n        ...state,\r\n        loading : false,\r\n        settings_loaded : true,\r\n        data\r\n      }\r\n    default:\r\n      return state;\r\n  }\r\n}","import { combineReducers } from 'redux'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport { userReducer } from './User'\r\nimport { contractsReducer } from './Contracts'\r\nimport { notificationsReducer } from './Notifications'\r\nimport { userListReducer } from './UserList'\r\nimport { customersReducer } from './Customers'\r\nimport { settingsReducer } from './Settings'\r\n\r\nexport const rootReducer = combineReducers({\r\n  user : userReducer,\r\n  contracts : contractsReducer,\r\n  notifications : notificationsReducer,\r\n  userList : userListReducer,\r\n  form : formReducer,\r\n  customersList : customersReducer,\r\n  settings : settingsReducer\r\n})\r\n\r\n","import { message } from 'antd';\r\nexport const LOGIN_ATTEMPT = 'LOGIN_ATTEMPT';\r\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\r\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\r\nexport const ETHERNAL_ERROR = 'ETHERNAL_ERROR';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const REINIT_USER = 'REINIT_USER';\r\n\r\n\r\nexport function tryToLogin(auth,pass,isRemember, referer=\"/\"){\r\n  return function(dispatch){\r\n    dispatch(startLogin());\r\n    const reqBody = {\r\n      data : {\r\n        login : auth,\r\n        password : pass\r\n      }\r\n    }\r\n    fetch('/api/login',{\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json'\r\n      },\r\n      method:'POST',\r\n      body : JSON.stringify(reqBody)\r\n    })\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      if(json.success === true){\r\n        localStorage.setItem('app_token',json.auth_token);\r\n        message.success(json.message, 1.5);\r\n        dispatch(successLogin(json, referer))\r\n        if(isRemember){\r\n          // document.cookie = \"autoLogin=true\";\r\n          //Запоминаем конкретного пользака без его пароля, он нам не нужен\r\n          localStorage.setItem('is_remember', true);\r\n          localStorage.setItem('currentUser',JSON.stringify(json.data));\r\n        }\r\n      }else{\r\n        dispatch(errorLogin(json))\r\n        message.error(json.message, 2.5)\r\n      }\r\n    })\r\n    .then(() =>{ \r\n    })\r\n    .catch(err => dispatch(errorLogin(err)))\r\n  }\r\n}\r\nexport function startLogin(){\r\n  return{\r\n    type : LOGIN_ATTEMPT,\r\n    isFetching : true\r\n  }\r\n}\r\n\r\nexport function successLogin(incData, referer){\r\n  return{\r\n    type : LOGIN_SUCCESS,\r\n    data : incData.data,\r\n    userRoles : incData.userRoles,\r\n    isFetching : false,\r\n    referer\r\n  }\r\n}\r\n\r\nexport function errorLogin(msg){\r\n  return{\r\n    type : LOGIN_FAIL,\r\n    data : msg,\r\n    isFetching : false\r\n  }\r\n}\r\n\r\n/**\r\n * Логаут из приложения\r\n * 1 - отправляем запрос на апи с просьбой кильнуть текущий токен конкретного пользака\r\n * 2 - киляем токен в локальном хранилище\r\n * 3 - посылаем действие о разлогинивании\r\n */\r\nexport function logout(){\r\n  return function(dispatch){\r\n    const token = localStorage.getItem('app_token');\r\n    fetch('/api/logout',{\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization' : `Bearer ${token}`\r\n      },\r\n      method:'POST',\r\n    })\r\n    .then(response => response.json())\r\n    .then(json => {\r\n      console.log('logout data')\r\n      console.log(json)\r\n      if(json.success){\r\n        message.success(json.message,1.5);\r\n        localStorage.removeItem('app_token');\r\n        localStorage.removeItem('is_remember');\r\n        localStorage.removeItem('currentUser');\r\n        \r\n        dispatch({\r\n          type : LOGOUT\r\n        })\r\n      }\r\n    })\r\n    .catch(err => {\r\n      message.error(err.message, 2);\r\n    })\r\n  }\r\n\r\n}","import React, { Component } from 'react'\r\nimport { Form, Icon, Input, Button, Checkbox } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router'\r\nimport { Redirect } from 'react-router-dom'\r\n\r\nimport {tryToLogin, successLogin} from '../actions/LoginActions';\r\n\r\nconst FormItem = Form.Item;\r\n\r\nconst formItemLayout = {\r\n  labelCol: { span:3 },\r\n  wrapperCol: { span:12,offset: 6 },\r\n};\r\n\r\nclass AuthWindow extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.props = props;\r\n        this.handleSubmit.bind(this);\r\n    }\r\n\r\n    componentWillMount(){\r\n      console.log('auth redirect');\r\n      //console.log(this.props)\r\n      const referer = this.props.location.state ? this.props.location.state.from : '/'; \r\n      const redirectTo = referer.pathname ? referer.pathname : '/';\r\n      console.log('referer');\r\n      console.log(redirectTo);\r\n      const {autoLogIn} = this.props;\r\n      document.body.style.backgroundColor = \"#E0F2F1\";\r\n      //Автологин из локального хранилища\r\n      if(localStorage.getItem('is_remember')){\r\n        let data = {}; \r\n        data.data = JSON.parse(localStorage.getItem('currentUser'));\r\n        autoLogIn(data, redirectTo);\r\n      }\r\n    }\r\n     getCookie(name) {\r\n        var matches = document.cookie.match(new RegExp(\r\n          \"(?:^|; )\" + name.replace(/([\\.$?*|{}\\(\\)\\[\\]\\\\\\/\\+^])/g, '\\\\$1') + \"=([^;]*)\"\r\n        ));\r\n        return matches ? decodeURIComponent(matches[1]) : undefined;\r\n      }\r\n\r\n    handleSubmit = (e) => {\r\n      e.preventDefault();\r\n      \r\n      this.props.form.validateFields((err, values) => {\r\n        const referer = this.props.location.state ? this.props.location.state.from : '/'; \r\n        const redirectTo = referer.pathname ? referer.pathname : '/';\r\n        if (!err) {\r\n          this.props.loginAction(values.userName, values.password, values.remember, redirectTo);\r\n        }\r\n      });\r\n    }\r\n\r\n\r\n    render(){\r\n      const { getFieldDecorator } = this.props.form;\r\n      return(\r\n        <div className=\"auth_block\">\r\n          <div className=\"app_logo fadeInDown animated\"></div>\r\n          <div className=\"auth_inner fadeIn animated\">   \r\n            <span className=\"subheader\">Вход в офис</span>\r\n            <Form id=\"app_login\" onSubmit={this.handleSubmit} className=\"login-form\" layout=\"horizontal\">\r\n              <FormItem>\r\n                {getFieldDecorator('userName', {\r\n                  rules: [{ required: true, message: 'Пожалуйста введите логин' }],\r\n                })(\r\n                  <Input prefix={<Icon type=\"user\" style={{ color: 'rgba(0,0,0,.25)' }} />} placeholder=\"Логин\" />\r\n                )}\r\n              </FormItem>\r\n              <FormItem>\r\n                {getFieldDecorator('password', {\r\n                  rules: [{ required: true, message: 'Пожалуйста введите пароль' }],\r\n                })(\r\n                  <Input prefix={<Icon type=\"lock\" style={{ color: 'rgba(0,0,0,.25)' }} />} type=\"password\" placeholder=\"Пароль\" />\r\n                )}\r\n              </FormItem>\r\n              <FormItem {...formItemLayout}>\r\n                {getFieldDecorator('remember', {\r\n                  valuePropName: 'checked',\r\n                  initialValue: false,\r\n                })(\r\n                  <Checkbox>Автоматический вход</Checkbox>\r\n                )}\r\n                <Button type=\"primary\" htmlType=\"submit\" className=\"login-form-button\" loading={this.props.userData.isFetching}>\r\n                  Войти\r\n                </Button>\r\n              </FormItem>\r\n              {this.props.userData.errMsg ?  '' : '' }\r\n            </Form>\r\n          </div>\r\n        </div>\r\n      );\r\n    }\r\n}\r\nconst WrappedNormalLoginForm = Form.create()(AuthWindow);\r\n\r\nconst mapStateToProps = store =>{\r\n  return {\r\n    userData : store.user\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n  loginAction : (login, password, isRemember, referer) => dispatch(tryToLogin(login,password,isRemember, referer)),\r\n  autoLogIn : (userData, referer) => dispatch(successLogin(userData, referer))\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(WrappedNormalLoginForm));","import React from 'react';\r\nimport { Spin } from 'antd';\r\n\r\nfunction Preloader(){\r\n  return (\r\n    <div className=\"preloadSpinner\">\r\n      <Spin size=\"large\"/>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Preloader;","import { message, notification } from 'antd'\r\nimport moment from 'moment'\r\n\r\nexport const START_GET_CONTRACTS = 'START_GET_CONTRACTS';\r\nexport const RECIEVE_CONTRACTS = 'RECIEVE_CONTRACTS';\r\nexport const ERROR_RECIEVE_CONTRACTS = 'ERROR_RECIEVE_CONTRACTS';\r\nexport const SET_FILTERS = 'SET_FILTERS';\r\nexport const APPLY_FILTERS = 'APPLY_FILTERS';\r\nexport const RESET_FILTERS = 'RESET_FILTERS';\r\nexport const RECIEVE_FILTER_VALUES = 'RECIEVE_FILTER_VALUES';\r\nexport const START_GET_CONTRACT_DATA = 'START_GET_CONTRACT_DATA';\r\nexport const RECIEVE_CONTRACT_DATA = 'RECIEVE_CONTRACT_DATA';\r\nexport const UPDATE_CONTRACT_DATA = 'UPDATE_CONTRACT_DATA';\r\nexport const DELETE_CONTRACT_DATA = 'DELETE_CONTRACT_DATA';\r\n\r\nexport function getContracts(id,filterData){\r\n  return function(dispatch){\r\n    dispatch(startGetContracts());\r\n    const reqBody = {\r\n      userId : id,\r\n      data : filterData\r\n    }\r\n    console.log('get contracts...');\r\n    const token = localStorage.getItem('app_token');\r\n    fetch('/api/contracts/getall',{\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization' : `Bearer ${token}`\r\n      },\r\n      method:'POST',\r\n      body : JSON.stringify(reqBody)\r\n    })\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      if(json.success === true){\r\n        dispatch(recieveContracts(json))\r\n      }\r\n    })\r\n    .catch(err => {\r\n      dispatch(errorGettingContracts(err))\r\n      message.error(err.message);\r\n    });\r\n  }\r\n}\r\n\r\nexport function startGetContracts(){\r\n  return {\r\n    type : START_GET_CONTRACTS,\r\n    isLoaded : false,\r\n    isFetching : true\r\n  }\r\n}\r\n\r\nexport function recieveContracts(res){\r\n  return {\r\n    type : RECIEVE_CONTRACTS,\r\n    isFetching : false,\r\n    isLoaded : true,\r\n    data : res.data.data,\r\n    total : res.data.total,\r\n    page : res.data.page\r\n  }\r\n}\r\n\r\nexport function recieveFilteredContracts(incFilters,res){\r\n  return {\r\n    type : RECIEVE_CONTRACTS,\r\n    isFetching : false,\r\n    filters : incFilters,\r\n    data : res\r\n  }\r\n}\r\n\r\nexport function errorGettingContracts(err){\r\n  return {\r\n    type : ERROR_RECIEVE_CONTRACTS,\r\n    msg : err.message\r\n  }\r\n}\r\nexport function setFilters(name, filter){\r\n  return {\r\n    type:SET_FILTERS,\r\n    name,\r\n    filter\r\n  }\r\n}\r\n\r\n\r\n\r\nexport function startFilterQuery(){\r\n  return {\r\n    type : APPLY_FILTERS,\r\n    isFetching : true\r\n  }\r\n}\r\n\r\nexport function applyFilters(id, data, page, limit){\r\n  const token = localStorage.getItem('app_token');\r\n  console.log(data);\r\n  data.filters.date_started = data.filters.date_started && moment(data.filters.date_started).format(\"YYYY-MM-DD HH:mm:ss\")\r\n  data.filters.date_deadline = data.filters.date_deadline && moment(data.filters.date_deadline).format(\"YYYY-MM-DD HH:mm:ss\")\r\n  return function(dispatch){\r\n    dispatch(startFilterQuery());\r\n    const reqBody = {\r\n      userId : id,\r\n      page : page ? page : data.page,\r\n      limit: limit ? limit : data.limit,\r\n      data : data.filters\r\n    }\r\n    fetch('/api/contracts/getall',{\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization' : `Bearer ${token}`\r\n      },\r\n      method:'POST',\r\n      body : JSON.stringify(reqBody)\r\n    })\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      if(json.success === true){\r\n        dispatch(recieveContracts(json, data))\r\n      }\r\n    })\r\n    .catch(err => {\r\n      dispatch(errorGettingContracts(err))\r\n      message.error(err.message)\r\n    });\r\n  }\r\n}\r\n\r\nexport function setPage(pageNum){\r\n  return{\r\n    type : \"PAGE_CHANGE\",\r\n    pageNum\r\n  }\r\n}\r\n\r\nexport function setLimit(limit){\r\n  return {\r\n    type : \"SET_LIMIT\",\r\n    limit\r\n  }\r\n}\r\n\r\nexport function resetFilters(id,data){\r\n  const filters = data.filters\r\n  for(let key in filters){\r\n    if(filters[key] !=='limit' && filters[key] !== 'offset'){\r\n        filters[key] = '';\r\n    }\r\n  }\r\n  filters.contractor = [id];\r\n  filters.status = 2;\r\n  filters.date_started = '';\r\n  filters.date_deadline= '';\r\n  data.limit = 10;\r\n  //filters.limit = 10;\r\n  //filters.offset = 0;\r\n  return applyFilters(id,data);\r\n}\r\n\r\nexport function getFilterData(id){\r\n  return function(dispatch){\r\n    const reqBody = {\r\n      userId : id,\r\n    }\r\n    const token = localStorage.getItem('app_token');\r\n    fetch('/api/contracts/getfilters',{\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization' : `Bearer ${token}`\r\n      },\r\n      method:'POST',\r\n      body : JSON.stringify(reqBody)\r\n    })\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      if(json.success === true){\r\n        dispatch(recieveFilters(json))\r\n      }\r\n    })\r\n    .catch(err => {\r\n      dispatch(errorGettingContracts(err))\r\n      message.error(err.message)\r\n    });\r\n  }\r\n}\r\n\r\nexport function recieveFilters(data){\r\n  return {\r\n    type : RECIEVE_FILTER_VALUES,\r\n    types : data.filterData.types,\r\n    users : data.filterData.users\r\n  }\r\n}\r\n\r\nexport function getContract(user, contractId){\r\n  return function(dispatch){\r\n      dispatch(startGettingContract())\r\n      const reqBody = {\r\n        userId : user,\r\n        contractId : contractId\r\n      }\r\n      const token = localStorage.getItem('app_token');\r\n      fetch('/api/contracts/get/' + contractId , {\r\n        headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization' : `Bearer ${token}`\r\n        },\r\n        method:'GET',\r\n        //body : JSON.stringify(reqBody)\r\n      })\r\n      .then(res => res.json())\r\n      .then(json => {\r\n        if(json.success === true){\r\n          dispatch(recieveContract(json.data));\r\n          dispatch(loadFileList(json.data.id))\r\n        }else{\r\n          message.warning(json.message);\r\n        }\r\n      })\r\n      .catch(err => {\r\n        message.error(err.message);\r\n      })\r\n\r\n  }\r\n}\r\n\r\nexport function startGettingContract(){\r\n  return{\r\n    type : START_GET_CONTRACT_DATA\r\n  }\r\n}\r\n\r\nexport function recieveContract(data){\r\n  return {\r\n    type : RECIEVE_CONTRACT_DATA,\r\n    data\r\n  }\r\n}\r\n\r\nexport function updateContract(id, formData, filterData){\r\n  return function (dispatch){\r\n    //formData.date_deadline = moment(formData.date_deadline).format(\"X\");\r\n    //console.log(formData);\r\n    const reqBody = {\r\n      userId : id,\r\n      data : formData\r\n    }\r\n    const token = localStorage.getItem('app_token');\r\n    fetch('/api/contracts/update/' + formData.id , {\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization' : `Bearer ${token}`\r\n      },\r\n      method:'PUT',\r\n      body : JSON.stringify(reqBody)\r\n    })\r\n    .then( res => res.json())\r\n    .then( json => {\r\n      if(json.success === true){\r\n        message.success(json.message);\r\n        //dispatch(getContracts(id, filterData))\r\n        dispatch(contractIsUpdated());\r\n      }else{\r\n        message.warning(json.message);\r\n      }\r\n    })\r\n    .catch( err => {\r\n      message.warning(err.message);\r\n    })\r\n  }\r\n}\r\n\r\nexport function deleteContract(id, deleteId){\r\n\r\n}\r\n\r\nexport function getContractFileList(userId, contractId){\r\n\r\n}\r\n\r\nexport function updateContractFileList(userId, data){\r\n\r\n}\r\n\r\nexport function contractIsUpdated(){\r\n  return {\r\n    type : \"CONTRACT_UPDATED\"\r\n  }\r\n}\r\n\r\nexport function contractLeaving(){\r\n  return {\r\n    type : \"CONTRACT_LEAVED\"\r\n  }\r\n}\r\n\r\nexport function createContract(uId,formData){\r\n  return function (dispatch){\r\n    const reqBody = {\r\n      userId : uId,\r\n      data : formData\r\n    }\r\n    const token = localStorage.getItem('app_token');\r\n    fetch('/api/contracts/create', {\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization' : `Bearer ${token}`\r\n      },\r\n      method:'PUT',\r\n      body : JSON.stringify(reqBody)\r\n    })\r\n    .then( res => res.json())\r\n    .then( json => {\r\n      if(json.success === true){\r\n        //message.success(json.msg);\r\n        notification.open({\r\n          message : 'Заявка создана',\r\n          description : 'Заявление создано и отправлено в работу.',\r\n          duration : 3.5\r\n        })\r\n        //dispatch(getContracts(uId))\r\n      }else{\r\n        //message.warning(json.msg);\r\n        notification.open({\r\n          message : 'Заявка не создана',\r\n          description : json.msg,\r\n          duration : 3.5\r\n        })\r\n      }\r\n    })\r\n    .catch( err => {\r\n      message.warning(err.message);\r\n    })\r\n  }\r\n}\r\n\r\nexport function fileUploaded(file){\r\n  return {\r\n    type : 'FILE_UPLOADED',\r\n    file\r\n  }\r\n}\r\n\r\n\r\nexport function removeFile(contractId,filePath){\r\n  return dispatch => {\r\n    const reqBody = {\r\n      filePath : filePath\r\n    }\r\n    const token = localStorage.getItem('app_token');\r\n    fetch(`/api/files/remove/${contractId}`, {\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization' : `Bearer ${token}`\r\n      },\r\n      method:'POST',\r\n      body : JSON.stringify(reqBody)\r\n    })\r\n    .then( res => res.json())\r\n    .then( json => {\r\n      if(json.success === true){\r\n        message.success(json.message);\r\n      }else{\r\n        message.warning(json.message);\r\n      }\r\n    })\r\n    .catch( err => {\r\n      message.warning(err.message);\r\n    })\r\n\r\n  }\r\n}\r\n\r\nexport function loadFileList(contractId){\r\n  return dispatch => {\r\n    dispatch({\r\n      type : \"START_FILES_LOADING\"\r\n    })\r\n    const token = localStorage.getItem('app_token');\r\n    fetch(`/api/files/getfiles/${contractId}`, {\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization' : `Bearer ${token}`\r\n      },\r\n      method:'GET',\r\n    })\r\n    .then( res => res.json())\r\n    .then( json => {\r\n      if(json.success === true){\r\n        //message.success(json.message);\r\n        const data = json.data;\r\n        dispatch(fileListLoaded(data))\r\n      }else{\r\n        message.warning(json.message);\r\n      }\r\n    })\r\n    .catch( err => {\r\n      message.warning(err.message);\r\n    })\r\n  }\r\n}\r\n\r\nexport function clearFileList(){\r\n  return {\r\n    type : \"CLEAR_FILE_LIST\"\r\n  }\r\n}\r\n\r\nexport function fileListLoaded(data){\r\n  return {\r\n    type : \"FILE_LIST_LOADED\",\r\n    data\r\n  }\r\n}","import { message } from 'antd';\r\n\r\nexport const GET_USERS_LIST = 'GET_USERS_LIST';\r\nexport const RECIEVE_USERS_LIST = 'RECIEVE_USERS_LIST';\r\nexport const SAVE_USER = 'SAVE_USER';\r\nexport const DELETE_USER = 'DELETE_USER';\r\nexport const UPDATE_SUCSESS = 'UPDATE_SUCSESS';\r\nexport const UPDATE_ERROR = 'UPDATE_ERROR';\r\nexport const GET_USER = 'GET_USER';\r\nexport const RECIEVE_USER = 'RECIEVE_USER';\r\nexport const CLEAR_CURRENT_USER = 'CLEAR_CURRENT_USER';\r\nexport const ADD_CONDITION = 'ADD_CONDITION';\r\nexport const CLEAR_SEARCH_STRING = 'CLEAR_SEARCH_STRING';\r\n\r\n\r\nexport function getUserList(id , condition){\r\n  return function(dispatch){\r\n    dispatch(fetchUsers());\r\n    const reqBody = {\r\n      userId : id,\r\n      data : condition\r\n    }\r\n    const token = localStorage.getItem('app_token');\r\n    fetch('/api/users/getall',{\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization' : `Bearer ${token}`\r\n      },\r\n      method:'POST',\r\n      body : JSON.stringify(reqBody)\r\n    })\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      if(json.success === true){\r\n        dispatch(recieveUserList(json))\r\n      }\r\n    })\r\n    .catch(err => {\r\n      message.error(err.message);\r\n    });\r\n  }\r\n}\r\n\r\nexport function getUser(currUserId, incUserId){\r\n  return function (dispatch){\r\n    dispatch(fetchUser());\r\n    const reqBody = {\r\n      userId : currUserId,\r\n      loadId : incUserId\r\n    }\r\n\r\n    const token = localStorage.getItem('app_token');\r\n    fetch('/api/users/get/'+ incUserId,{\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization' : `Bearer ${token}`\r\n      },\r\n      method:'GET',\r\n      //body : JSON.stringify(reqBody)\r\n    })\r\n    .then( res => res.json())\r\n    .then( json => {\r\n      if(json.success === true){\r\n        dispatch(recieveUser(json))\r\n      }\r\n    })\r\n    .catch(err => {\r\n      message.error(err.message);\r\n    });\r\n  }\r\n}\r\n\r\nexport function recieveUser(json){\r\n  return {\r\n    type : RECIEVE_USER,\r\n    json\r\n  }\r\n}\r\nexport function fetchUsers(){\r\n  return{\r\n    type : GET_USERS_LIST\r\n  }\r\n}\r\n\r\nexport function fetchUser(){\r\n  return {\r\n    type: GET_USER\r\n  }\r\n}\r\n\r\nexport function addCondition(conType, value){\r\n  return {\r\n    type : ADD_CONDITION,\r\n    conType,\r\n    value\r\n  }\r\n}\r\n\r\nexport function clearSearchStr(){\r\n  return {\r\n    type : CLEAR_SEARCH_STRING\r\n  }\r\n}\r\n\r\nexport function setPage(page){\r\n  return {\r\n    type: \"SET_PAGE\",\r\n    page\r\n  }\r\n}\r\n\r\nexport function updatedUser(incId,formData){\r\n  return function(dispatch){\r\n    const reqBody = {\r\n      userId : incId,\r\n      data : formData\r\n    }\r\n    const id = formData.id ? formData.id : '';\r\n    const token = localStorage.getItem('app_token');\r\n    fetch('/api/users/update/' + id,{\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization' : `Bearer ${token}`\r\n      },\r\n      method:'PUT',\r\n      body : JSON.stringify(reqBody)\r\n    })\r\n    .then( res => res.json())\r\n    .then( json => {\r\n      if(json.success === true){\r\n        message.success(json.messasge);\r\n        if(incId === formData.id){\r\n          dispatch(rerenderUser(formData));\r\n          dispatch(getUserList(id));\r\n        }else{\r\n          dispatch(getUserList(id));\r\n        }\r\n      }\r\n    })\r\n    .catch( err => {\r\n      message.error(err.message)\r\n    })\r\n  }\r\n}\r\n\r\nexport function recieveUserList(data){\r\n  return {\r\n    type : RECIEVE_USERS_LIST,\r\n    data,\r\n  }\r\n}\r\n\r\nexport function insertUser(incId, formData){\r\n  return function(dispatch){\r\n    const reqBody = {\r\n      userId : incId,\r\n      data : formData\r\n    }\r\n    const token = localStorage.getItem('app_token');\r\n    fetch('/api/users/create/', {\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization' : `Bearer ${token}`\r\n      },\r\n      method:'PUT',\r\n      body : JSON.stringify(reqBody)\r\n    })\r\n    .then( res => res.json())\r\n    .then( json => {\r\n      if(json.success === true){\r\n        message.success(json.msg);\r\n        if(incId === formData.id){\r\n          dispatch(rerenderUser(formData));\r\n          dispatch(getUserList(incId));\r\n        }else{\r\n          dispatch(getUserList(incId));\r\n        }\r\n      }\r\n    })\r\n    .catch( err => {\r\n      message.error(err.message)\r\n    })\r\n  }\r\n}\r\n\r\nexport function deleteUser(id,deleteUserId){\r\n  return function(dispatch){\r\n    if(id === deleteUserId){\r\n      message.warning('Вы не можете удалить свою учетную запись!');\r\n      return;\r\n    }\r\n    const reqBody = {\r\n      userId : id,\r\n      deleteId : deleteUserId\r\n    }\r\n    const token = localStorage.getItem('app_token');\r\n    fetch('/api/users/delete/' + deleteUserId,{\r\n      headers: {\r\n          'Accept': 'application/json',\r\n          'Content-Type': 'application/json',\r\n          'Authorization' : `Bearer ${token}`\r\n      },\r\n      method:'DELETE',\r\n      body : JSON.stringify(reqBody)\r\n    })\r\n    .then( res => res.json())\r\n    .then( json => {\r\n      message.success(json.message)\r\n      dispatch(getUserList(id))\r\n    })\r\n    .catch( err => {\r\n      message.error(err.message);\r\n    })\r\n  }\r\n}\r\n\r\nexport function rerenderUser(data){\r\n  return {\r\n    type : \"REINIT_USER\",\r\n    data\r\n  }\r\n}\r\n\r\nexport function clearForm(){\r\n  return {\r\n    type : CLEAR_CURRENT_USER\r\n  }\r\n}","import { message } from 'antd';\r\nexport const GET_CUSTOMERS_LIST = 'GET_CUSTOMERS_LIST';\r\nexport const RECIEVE_CUSTOMERS_LIST ='RECIEVE_CUSTOMERS_LIST';\r\nexport const GET_CUSTOMER = 'GET_CUSTOMER';\r\nexport const RECIEVE_CUSTOMER = 'RECIEVE_CUSTOMER';\r\nexport const UPDATE_CUSTOMER = 'UPDATE_CUSTOMER';\r\nexport const DELETE_CUSTOMER = 'DELETE_CUSTOMER';\r\nexport const CREATE_CUSTOMER = 'CREATE_CUSTOMER';\r\nexport const SET_SEARCH_STRING = 'SET_SEARCH_STRING';\r\nexport const RESET_SEARCH_STRING = 'RESET_SEARCH_STRING';\r\nexport const CLEAR_LAST_INSERTED = 'CLEAR_LAST_INSERTED';\r\n\r\nexport const startGetCustomers = () =>{\r\n  return {\r\n    type : GET_CUSTOMERS_LIST\r\n  }\r\n}\r\n\r\n\r\nexport const getCustomersList = (uId, searchData = '') => {\r\n  return (dispatch) => {\r\n    //TO DO\r\n    dispatch(startGetCustomers())\r\n    const reqBody = {\r\n      userId : uId,\r\n      data : searchData\r\n    }\r\n    const token = localStorage.getItem('app_token');\r\n    fetch('/api/customers/getall',{\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization' : `Bearer ${token}`\r\n      },\r\n      method:'POST',\r\n      body : JSON.stringify(reqBody)\r\n    })\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      if(json.success === true){\r\n        dispatch(recieveCustomersList(json))\r\n      }else{\r\n        dispatch({\r\n            type : \"ERROR_RECIEVE\"\r\n        })\r\n        message.error(`Ошибка ${json.message.toString()}`)\r\n      }\r\n    })\r\n    .catch(err => {\r\n        message.warning(err.message);\r\n    });\r\n  }\r\n}\r\n\r\nexport const search = (str) => {\r\n  return {\r\n    type : SET_SEARCH_STRING,\r\n    str\r\n  }\r\n}\r\n\r\nexport const resetSearch = () => {\r\n  return {\r\n    type : RESET_SEARCH_STRING\r\n  }\r\n}\r\n\r\nexport const recieveCustomersList = (data) => {\r\n  return {\r\n    type : RECIEVE_CUSTOMERS_LIST,\r\n    data\r\n  }\r\n}\r\n\r\nexport const getCurrentCustomer = (uId, customerId) => {\r\n  return (dispatch) => {\r\n    //TO DO\r\n    const reqBody = {\r\n      userId : uId,\r\n    }\r\n    const token = localStorage.getItem('app_token');\r\n    fetch('/api/customers/get/' + customerId,{\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization' : `Bearer ${token}`\r\n      },\r\n      method:'GET',\r\n      //body : JSON.stringify(reqBody)\r\n    })\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      if(json.success === true){\r\n        dispatch(recieveCustomer(json.data))\r\n      }\r\n    })\r\n    .catch(err => {\r\n      message.warning(err.message);\r\n    });\r\n  }\r\n}\r\n\r\nexport const recieveCustomer = (data) => {\r\n  return {\r\n    type : RECIEVE_CUSTOMER,\r\n    data\r\n  }\r\n}\r\n\r\nexport const updateCustomer = (uId, formData, str) => {\r\n  return (dispatch) => {\r\n    //TO DO\r\n    const reqBody = {\r\n      userId : uId,\r\n      data : formData\r\n    }\r\n    const token = localStorage.getItem('app_token');\r\n    fetch('/api/customers/update/' + formData.id,{\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization' : `Bearer ${token}`\r\n      },\r\n      method:'PUT',\r\n      body : JSON.stringify(reqBody)\r\n    })\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      if(json.success === true){\r\n        //console.log('customer recieved');\r\n        dispatch(getCustomersList(uId, str));\r\n        message.success(json.message);\r\n        dispatch({\r\n          type:'FINISH_INSERTING',\r\n          data : json.data.insertId\r\n        })\r\n      }else{\r\n        message.warning(json.message);\r\n      }\r\n    })\r\n    .catch(err => {\r\n      message.warning(err.message);\r\n    });\r\n  }\r\n}\r\n\r\nexport const deleteCustomer = (uId, deleteId, str) => {\r\n  return (dispatch) => {\r\n    //TO DO\r\n    const reqBody = {\r\n      userId : uId,\r\n      deleteId : deleteId\r\n    }\r\n    const token = localStorage.getItem('app_token');\r\n    fetch('/api/customers/delete/' + deleteId,{\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization' : `Bearer ${token}`\r\n      },\r\n      method:'DELETE',\r\n      body : JSON.stringify(reqBody)\r\n    })\r\n    .then( res => res.json())\r\n    .then( json => {\r\n      message.success(json.message)\r\n      dispatch(getCustomersList(uId, str))\r\n    })\r\n    .catch( err => {\r\n      message.error(err.message);\r\n    })\r\n  }\r\n}\r\n\r\nexport const insertCustomer = (uId, formData) => {\r\n  return (dispatch) => {\r\n    //TO DO\r\n    dispatch({\r\n      type:'INSERTING_OR_UPDATING'\r\n    })\r\n    const reqBody = {\r\n      userId : uId,\r\n      data : formData\r\n    }\r\n    console.log(reqBody);\r\n    const token = localStorage.getItem('app_token');\r\n    fetch('/api/customers/create',{\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization' : `Bearer ${token}`\r\n      },\r\n      method:'PUT',\r\n      body : JSON.stringify(reqBody)\r\n    })\r\n    .then( res => res.json())\r\n    .then( json => {\r\n      message.success(json.message)\r\n      dispatch(getCustomersList(uId))\r\n      dispatch({\r\n        type:'FINISH_INSERTING',\r\n        data : json.insertId\r\n      })\r\n    })\r\n    .catch( err => {\r\n      message.error(err.message);\r\n    })\r\n  }\r\n}\r\n\r\nexport const setSearch = (conType, value) => {\r\n  return {\r\n    type : \"ADD_CONDITION\",\r\n    conType,\r\n    value\r\n  }\r\n}\r\n\r\nexport const setPage = (page) => {\r\n  return {\r\n    type: \"SET_PAGE\",\r\n    page\r\n  }\r\n}\r\n\r\nexport const clearInsert = () => {\r\n  return {\r\n    type : CLEAR_LAST_INSERTED\r\n  }\r\n}","import { message } from 'antd';\r\n\r\nexport const START_LOADING = \"START_LOADING\"\r\nexport const SETTINGS_LOADED = \"SETTINGS_LOADED\"\r\nexport const LOAD_SETTINGS = \"LOAD SETTINGS\"\r\nexport const LOAD_CURRENT_SETTING = \"LOAD_CURRENT_SETTING\"\r\nexport const UPDATE_SETTING = \"UPDATE_SETTING\"\r\nexport const CHANGE_VALUE = \"CHANGE_VALUE\"\r\nexport const CREATE_VALUE = \"CREATE_VALUE\"\r\nexport const CLEAR_ROW = \"CLEAR_ROW\"\r\n\r\nexport const startLoading = () => {\r\n  return {\r\n    type : START_LOADING\r\n  }\r\n}\r\n\r\nexport const finishLoading = (data) => {\r\n  return {\r\n    type : SETTINGS_LOADED,\r\n    data\r\n  }\r\n}\r\n\r\nexport const updateValue = ( itemType, itemPos, itemField, value) => {\r\n  return {\r\n    type : CHANGE_VALUE,\r\n    itemPos,\r\n    itemType,\r\n    itemField,\r\n    value\r\n  }\r\n}\r\n\r\nexport const createRow = ( itemType, itemField, value) => {\r\n  if(value === '') return clearRow();\r\n  return {\r\n    type : CREATE_VALUE,\r\n    itemType,\r\n    itemField,\r\n    value\r\n  }\r\n}\r\n\r\nexport const clearRow = () => {\r\n  return {\r\n    type  : CLEAR_ROW\r\n  }\r\n}\r\n\r\nexport const getSettings = (userId, condition = '') => {\r\n  return (dispatch) => {\r\n    dispatch(startLoading());\r\n    //TO DO\r\n    //const reqBody = {\r\n    //  userId : userId,\r\n    //}\r\n    const token = localStorage.getItem('app_token');\r\n    fetch('/api/settings/getall',{\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization' : `Bearer ${token}`\r\n      },\r\n      method:'GET',\r\n      //body : JSON.stringify(reqBody)\r\n    })\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      if(json.success === true){\r\n        //message.success(json.message)\r\n        dispatch(finishLoading(json.data))\r\n      }else{\r\n        message.warn(json.message);\r\n      }\r\n      \r\n    })\r\n    .catch(err => {\r\n      //console.log(err);\r\n      message.warn(`Ошибка ${err.message}`);\r\n      dispatch(finishLoading())\r\n    });\r\n\r\n  }\r\n}\r\n\r\nexport const getSettingByType  = (userId, type) => {\r\n  return (dispatch) => {\r\n    dispatch(startLoading());\r\n    // TO DO\r\n  }\r\n}\r\n\r\nexport const deleteSetting = (userId, type, settingId) => {\r\n  return (dispatch) => {\r\n    //TO DP\r\n  }\r\n}\r\n\r\nexport const updateSetting = (userId, type, setting) => {\r\n  return (dispatch) => {\r\n    //TO DO\r\n    const updId = setting.id;\r\n    delete setting.id;\r\n    dispatch(startUpdate())\r\n    const reqBody = {\r\n      userId : userId,\r\n      data : setting\r\n    }\r\n    const token = localStorage.getItem('app_token');\r\n    fetch(`/api/${type}/update/${updId}`,{\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization' : `Bearer ${token}`\r\n      },\r\n      method:'PUT',\r\n      body : JSON.stringify(reqBody)\r\n    })\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      if(json.success === true){\r\n          message.success(json.message)\r\n          //dispatch(getSettings(userId))\r\n      }else{\r\n          message.warn(json.message);\r\n      }\r\n      dispatch(finishUpdate())\r\n    })\r\n    .catch(err => {\r\n      //console.log(err);\r\n      message.warn(`Ошибка ${err.message}`);\r\n      dispatch(finishUpdate())\r\n    });\r\n  }\r\n}\r\n\r\nexport const insertSetting = (userId, type, insertValues) => {\r\n  return (dispatch) => {\r\n    // TO DO\r\n    dispatch(startUpdate())\r\n    const reqBody = {\r\n      userId : userId,\r\n      data : insertValues\r\n    }\r\n    console.log(reqBody)\r\n    const token = localStorage.getItem('app_token');\r\n    fetch(`/api/${type}/create`,{\r\n      headers: {\r\n        'Accept': 'application/json',\r\n        'Content-Type': 'application/json',\r\n        'Authorization' : `Bearer ${token}`\r\n      },\r\n      method:'PUT',\r\n      body : JSON.stringify(reqBody)\r\n    })\r\n    .then(res => res.json())\r\n    .then(json => {\r\n      if(json.success === true){\r\n        message.success(json.message)\r\n        //dispatch(getSettings(userId))\r\n        dispatch(getSettings())\r\n        dispatch(clearRow())\r\n      }else{\r\n        message.warn(json.message);\r\n      }\r\n      dispatch(finishUpdate())\r\n    })\r\n    .catch(err => {\r\n      message.warn(`Ошибка ${err.message}`);\r\n      dispatch(finishUpdate())\r\n    });\r\n  }\r\n}\r\n\r\nexport const startUpdate = () => {\r\n  return {\r\n    type : \"START_UPDATE\"\r\n  }\r\n}\r\n\r\nexport const finishUpdate = () => {\r\n  return {\r\n    type : \"FINISH_UPDATE\"\r\n  }\r\n}","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router'\r\nimport { Row, Col, Form, Button, Input, DatePicker, Select, Icon, Collapse  } from 'antd';\r\nimport { setFilters , applyFilters, resetFilters, getFilterData, setPage } from '../actions/WorkSheetActions'\r\nimport moment from 'moment'\r\n\r\n\r\nconst FormItem = Form.Item;\r\n\r\n\r\nclass Filters extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.handeSubmit = this.handeSubmit.bind(this);\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleContractorChange = this.handleContractorChange.bind(this);\r\n    this.handleStatusChange = this.handleStatusChange.bind(this);\r\n    this.clearSearchString = this.clearSearchString.bind(this)\r\n    this.handleDateFrom = this.handleDateFrom.bind(this)\r\n    this.handleDateTo = this.handleDateTo.bind(this)\r\n    this.resetFilters = this.resetFilters.bind(this)\r\n  }\r\n  componentWillMount(){\r\n      \r\n      //this.props.getFilterData(this.props.user.id);\r\n  }\r\n\r\n  handeSubmit = (e) =>{\r\n    e.preventDefault();\r\n    this.props.applyFilters(this.props.user.id,this.props.applyData);\r\n  }\r\n  handleInputChange = (e, parameter) => {\r\n    this.props.setFilters('whereString',e.target.value);\r\n  }\r\n  handleContractorChange = (value) => {\r\n    //this.props.setFilters('contractor',value);\r\n    //this.props.setFilters('contractor', {id : value});\r\n    this.props.setFilters('contractor', [value]);\r\n  }\r\n\r\n  handleStatusChange = (value) => {\r\n    this.props.setFilters('status',value);\r\n  }\r\n\r\n  handleCustomerChange = value => {\r\n    value = value > 0 ? value : '';\r\n    this.props.setFilters('customer_id',value);\r\n  }\r\n\r\n  clearSearchString = () => {\r\n    this.props.setFilters('whereString','');\r\n  }\r\n\r\n  handleDateFrom = (date, value) => {\r\n    //console.log(date);\r\n    //console.log(moment(date).format(\"X\"));\r\n    const setDate  = date === null ? '' : date;\r\n    this.props.setFilters('date_started',setDate);\r\n  }\r\n\r\n  handleDateTo = (date, value) => {\r\n    const setDate  = date === null ? '' : date;\r\n    this.props.setFilters('date_deadline',setDate);\r\n  }\r\n\r\n  resetFilters = () => {\r\n    this.props.resetFilters(this.props.user.id,this.props.applyData);\r\n    this.props.setPage(1);\r\n    //this.props.applyFilters('contractor',this.props.user.id);\r\n  }\r\n  render(){\r\n    return(\r\n      <Collapse bordered={false}>\r\n        <Collapse.Panel header=\"Поиск\">\r\n          <Form onSubmit={this.handeSubmit} layout=\"vertical\">\r\n            <Row gutter={12}>\r\n              <Col span={2}>\r\n                <FormItem label=\"Исполнитель\">\r\n                  <Select \r\n                    showSearch\r\n                    style={{ width: '100%' }}\r\n                    defaultValue={this.props.user.id}\r\n                    value={this.props.filters.contractor[0] }\r\n                    placeholder=\"Исполнитель\"\r\n                    onChange={this.handleContractorChange}\r\n                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                  >\r\n                    <Select.Option key={0} value={null}>Все</Select.Option>\r\n                    {this.props.users.map(usr => <Select.Option key={usr.id} value={usr.id}>{usr.name}</Select.Option>)}\r\n                  </Select>\r\n                </FormItem>\r\n              </Col>\r\n              <Col span={6}>\r\n                <FormItem label=\"Поиск\">\r\n                  <Input placeholder=\"Номер договора, Адрес, ФИО\"\r\n                    value={this.props.filters.whereString}\r\n                    onChange={ e => this.handleInputChange(e, 'searchString')}\r\n                    suffix={this.props.filters.whereString.length > 0 ? <span className=\"closePicker\"><Icon type=\"close\" theme=\"outlined\" onClick={this.clearSearchString}/></span> : ''}\r\n                  />\r\n                </FormItem>\r\n              </Col>\r\n            </Row>\r\n            <Row gutter={12}>\r\n              <Col span={2} >\r\n                <FormItem label=\"Статус\">\r\n                  <Select \r\n                    showSearch\r\n                    style={{ width: '100%' }}\r\n                    placeholder=\"Статус\"\r\n                    value={this.props.filters.status}\r\n                    onChange={this.handleStatusChange}\r\n                  >\r\n                    {this.props.filterData ? this.props.settings.status_types.map(item => <Select.Option key={item.id} value={item.id}>{item.type}</Select.Option>) : ''}\r\n                  </Select>\r\n                </FormItem>\r\n              </Col>\r\n              <Col span={4}>\r\n                <FormItem label=\"Период\">\r\n                  <DatePicker \r\n                    style={{width:'40%'}} \r\n                    placeholder=\"C\" \r\n                    value={this.props.filters.date_started === '' ? null : moment(this.props.filters.date_started, 'YYYY-MM-DD') } \r\n                    format=\"YYYY-MM-DD\" \r\n                    onChange={this.handleDateFrom}\r\n                  />\r\n                  -\r\n                  <DatePicker \r\n                    style={{width:'40%'}} \r\n                    placeholder=\"По\" \r\n                    value={this.props.filters.date_deadline === '' ? null :moment(this.props.filters.date_deadline, 'YYYY-MM-DD') } \r\n                    format=\"YYYY-MM-DD\" \r\n                    onChange={this.handleDateTo}\r\n                  />\r\n                </FormItem>\r\n              </Col>\r\n              <Col span={2}>\r\n                <FormItem label=\"Заказчик\">\r\n                  <Select\r\n                    showSearch\r\n                    style={{width:'100%'}}\r\n                    placeholder=\"Заказчик\"\r\n                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    onChange={this.handleCustomerChange}\r\n                    defaultActiveFirstOption={true}\r\n                  >\r\n                    <Select.Option key={0} value={0}>Не выбран</Select.Option>\r\n                      {this.props.customers.map(customer => <Select.Option key={customer.id} value={customer.id}>{`${customer.name} ${customer.firstname} ${customer.secondname}`}</Select.Option>)}\r\n                    </Select>\r\n                </FormItem>\r\n              </Col>\r\n              <Col span={6}>\r\n                <FormItem label='&nbsp;'>\r\n                  <Button\r\n                    type=\"primary\"\r\n                    htmlType=\"submit\"\r\n                    loading={this.props.loadingState}\r\n                    icon=\"search\"\r\n                  >\r\n                    Искать\r\n                  </Button>\r\n                  <Button\r\n                    type=\"danger\"\r\n                    onClick={this.resetFilters}\r\n                  >\r\n                    Сбросить\r\n                  </Button>\r\n                </FormItem>\r\n              </Col>\r\n            </Row>\r\n          </Form>\r\n        </Collapse.Panel>\r\n      </Collapse>\r\n    )\r\n  }\r\n}\r\n//const FiltersForm = Form.create()(Filters);\r\n\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n  setFilters : (name, filter) => dispatch(setFilters(name, filter)),\r\n  applyFilters : (id, filters) => dispatch(applyFilters(id, filters)),\r\n  resetFilters : (id, filters) => dispatch(resetFilters(id, filters)),\r\n  getFilterData : (id) => dispatch(getFilterData(id)),\r\n  setPage : (page) => dispatch(setPage(page))\r\n})\r\n\r\n//export default Filters\r\nexport default withRouter(connect(null,mapDispatchToProps)(Filters));","import React, { Component } from 'react'\r\nimport Preloader from './Preloader'\r\nimport { Table, Button, Modal, Menu, Dropdown, Icon } from 'antd';\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\n\r\nimport { getContracts , setFilters, getContract, updateContract, applyFilters, getFilterData, setPage, setLimit } from '../actions/WorkSheetActions'\r\nimport { getUserList } from '../actions/UserListActions'\r\nimport { getCustomersList } from '../actions/CustomersActions'\r\nimport { getSettings } from '../actions/SettingsActions'\r\nimport Filters from './Filters';\r\nimport moment from 'moment';\r\n\r\n\r\nclass WorkSheet extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      searchText : '',\r\n      isModalOn : false\r\n    };\r\n    //this.handleClick = this.handleModalClick.bind(this);\r\n  }\r\n\r\n  componentWillMount(){\r\n    //if(!this.props.contracts.isLoaded){\r\n    const { user, users, getUsers, customers, getCustomers,settings, loadSettings } = this.props;\r\n    if(users.isLoading){\r\n      getUsers(user.id);\r\n    }\r\n    if(!customers.loaded){\r\n      getCustomers(user.id)\r\n    }\r\n    if(!settings.settings_loaded){\r\n      loadSettings();\r\n    }\r\n\r\n  \r\n    if(!this.props.contracts.isLoaded){\r\n        //Устанавливаем фильтр на текущего пользователя\r\n    this.props.setFilters('contractor',[this.props.user.id]);\r\n    //Устанавливаем фильтр по умолчанию на статус заявок - В работе\r\n    this.props.setFilters('status', 2);\r\n      //console.log('loading filters...');\r\n      //this.props.getFilterData(this.props.user.id);\r\n      \r\n      \r\n    }\r\n    this.props.applyFilters(this.props.user.id,this.props.contracts);\r\n    //}\r\n  }\r\n  componentDidUpdate(prevProps){\r\n    //console.log('component updated');\r\n    //console.log('prev  props')\r\n    //console.log(prevProps.contracts);\r\n    //console.log('current props');\r\n    //console.log(this.props.contracts);\r\n  }\r\n\r\n  handleSearch = (type,selectedKeys) => () => {\r\n    this.props.applyFilter(this.props.user.id,this.props.contracts, type, selectedKeys[0]);\r\n  }\r\n  \r\n  handleReset = clearFilters => () => {\r\n    clearFilters();\r\n    this.props.resetFilter(this.props.user.id,this.props.contracts.filters);\r\n\r\n  }\r\n  onPaginationChange = (page) =>{\r\n    const { contracts, setPage } = this.props;\r\n    let offset =  page.current === 1 ? 0 : contracts.filters.limit * (page.current-1);\r\n    setPage(page.current)\r\n    this.props.applyFilters(this.props.user.id, this.props.contracts, page.current, page.pageSize);\r\n  }\r\n  onPageSizeChange = (current, pageSize) => {\r\n    const { setLimit } = this.props;\r\n    setLimit(pageSize);\r\n    //this.props.setFilters('limit',pageSize);\r\n\r\n   // this.props.applyFilters(this.props.user.id, this.props.contracts, current.current, pageSize);\r\n    \r\n  }\r\n\r\n  onCalendarChange = (date, string)=>{\r\n    console.log(date);\r\n    console.log(string);\r\n  }\r\n\r\n  onRecordClick = (recoordId) => {\r\n    const { user, getContract } = this.props;\r\n    console.log('record clicked: ' + recoordId);\r\n    this.setState(state => ({\r\n      isModalOn: !state.isModalOn\r\n    }));\r\n    getContract(user.id, recoordId);\r\n  }\r\n\r\n  closeModalClick = () => {\r\n    this.setState(state => ({\r\n      isModalOn: false\r\n    }));\r\n  }\r\n\r\n  onContractFormSubmit = (values) => {\r\n    const { user, updateContract, contracts } = this.props;\r\n    console.log('form submitted.');\r\n    console.log(values);\r\n    updateContract(user.id, values, contracts.filters);\r\n    this.closeModalClick();\r\n  }\r\n\r\n  render(){\r\n    const { user, users, customers, settings } = this.props;\r\n      const columns = [{\r\n        title: '№ Договора',\r\n        dataIndex: 'contract_number',\r\n        key: 'contract_number',\r\n      }, {\r\n        title: 'Дата заключения',\r\n        dataIndex: 'date_started',\r\n        key: 'date_started',\r\n        render : (_, record) => {\r\n          return moment(record.date_started).format('DD.MM.YYYY')\r\n        }\r\n      }, {\r\n        title: 'ФИО Заказчика',\r\n        dataIndex: 'customer',\r\n        key: 'customer',\r\n        render : (_, record) => {\r\n          if(!customers.loaded){ \r\n            return <div><Icon type=\"loading\" /> Загружаю... </div>\r\n          }else{\r\n            const customerData = customers.data.filter( customer => {\r\n              return customer.id === record.customer_id\r\n            })\r\n\r\n            return `${customerData[0].firstname} ${customerData[0].name} ${customerData[0].secondname}`\r\n\r\n          }\r\n        }\r\n      },{\r\n        title: 'Адрес объекта',\r\n        dataIndex: 'address',\r\n        key: 'address'\r\n      },{\r\n        title: 'Вид кадастровых работ',\r\n        dataIndex: 'type_of_work',\r\n        key: 'type_of_work',\r\n        render : (_, record) => {\r\n          if(!settings.settings_loaded) return 'Загружаю...';\r\n          const type = settings.data.work_types.find(item => {\r\n            return item.id === record.type_of_work;\r\n          });\r\n          return type ? type.work_type : \"Не указано\" ;\r\n        }\r\n      },{\r\n        title: 'Исполнители',\r\n        dataIndex: 'name',\r\n        key: 'contractor',\r\n        render : (_, record) => {\r\n          let res;\r\n          if(record.users.length > 1){\r\n            const menu = (\r\n              <Menu>\r\n              {record.users.map( user => <Menu.Item key={user.id}>{user.name}</Menu.Item>)}\r\n              </Menu>\r\n            )\r\n            //res = record.users.map( user => <div key={user.id}>{user.name}</div>)\r\n            //return (\r\n            //  <Dropdown overlay={menu}>\r\n            //  Исполнители <Icon type=\"down\" />\r\n            //  </Dropdown>\r\n            //)\r\n            return (\r\n              <Dropdown overlay={menu}>\r\n              <a>\r\n               Исполнители<Icon type=\"down\" />\r\n              </a>\r\n            </Dropdown>\r\n            )\r\n          }else {\r\n            res = record.users[0] ? record.users[0].name : \"Не назначены\";\r\n            return res;\r\n          }\r\n          \r\n        }\r\n      },\r\n      {\r\n        title: 'Примечание',\r\n        dataIndex: 'comment',\r\n        key: 'comment',\r\n        render : (text, record)=>{\r\n          return (<Link to={\"contracts/edit/\" + record.id}>Информация</Link>)\r\n        }\r\n      },{\r\n        title: 'Исполнить до',\r\n        dataIndex: 'date_deadline',\r\n        key: 'date_deadline',\r\n        render : (_, record) => {\r\n          if(record.date_deadline)\r\n            return moment(record.date_deadline).format('DD.MM.YYYY');\r\n          return 'Не указано';\r\n        }\r\n      }];\r\n      return !this.props.contracts.isLoaded ? \r\n        <Preloader/>\r\n         :\r\n        (<div>\r\n          <Filters\r\n            user={this.props.user} \r\n            filterData={this.props.contracts.filterData}\r\n            filters={this.props.contracts.filters}\r\n            applyData={this.props.contracts}\r\n            loadingState={this.props.contracts.isFetching}\r\n            isLoaded={this.props.contracts.isLoaded}\r\n            settings={settings.data}\r\n            users={users.data}\r\n            customers={customers.data}\r\n            />\r\n          <Table  \r\n            rowKey=\"id\" \r\n            columns={columns} \r\n            dataSource={this.props.contracts.data}\r\n            loading={this.props.contracts.isFetching}\r\n            onChange={this.onPaginationChange}\r\n            rowClassName={(record, index) => {\r\n              const deadLinePassed = moment(record.date_deadline).format('DD.MM.YYYY') > moment().format('DD.MM.YYYY') ? false : true;\r\n              return deadLinePassed ? 'row warn' : 'row normal';\r\n            }}\r\n            pagination={{total:this.props.contracts.total, pageSize : this.props.contracts.limit, showSizeChanger : true, onShowSizeChange : this.onPageSizeChange, current : this.props.contracts.page }}\r\n            locale={{ emptyText : \"Заявок не найдено\"}}\r\n          />\r\n          <Modal\r\n            footer={false}\r\n            visible={this.state.isModalOn}\r\n            onCancel={this.closeModalClick}\r\n            title=\"Информация о заявке\"\r\n          >\r\n          </Modal>\r\n        </div>\r\n      );\r\n    }\r\n}\r\n\r\n    const mapStateToProps = store =>{\r\n      return {\r\n        user : store.user,\r\n        contracts : store.contracts,\r\n        users : store.userList,\r\n        settings : store.settings,\r\n        customers : store.customersList\r\n      }\r\n    }\r\n\r\n    const mapDispatchToProps = dispatch =>({\r\n      getContracts : (id,limit,offset,filterData) => dispatch(getContracts(id,limit,offset,filterData)),\r\n      setFilters : (name, filter) => dispatch(setFilters(name, filter)),\r\n      getContract : (userId, id) => dispatch(getContract(userId,id)),\r\n      updateContract : (userId, formData, filterData) => dispatch(updateContract(userId,formData,filterData)),\r\n      applyFilters : (id, filters, page, limit) => dispatch(applyFilters(id, filters, page, limit)),\r\n      getFilterData : (id) => dispatch(getFilterData(id)),\r\n      getUsers : (id) => dispatch(getUserList(id)),\r\n      getCustomers : (id) => dispatch(getCustomersList(id)),\r\n      setPage : (page) => dispatch(setPage(page)),\r\n      setLimit : (limit) => dispatch(setLimit(limit)),\r\n      loadSettings : () => dispatch(getSettings())\r\n      //resetFilter : (id, filters) => dispatch(reserFlilters(id,filters))\r\n    })\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(WorkSheet));\r\n\r\n//export default WorkSheet;","import React, { Component } from 'react'\r\nimport { Layout, Menu, Icon } from 'antd'\r\nimport { NavLink, withRouter, Link } from 'react-router-dom'\r\n\r\nconst { Sider } = Layout;\r\nconst SubMenu = Menu.SubMenu;\r\n\r\nclass LeftMenu extends Component{\r\n  constructor(props){\r\n      super(props);\r\n      this.state = {\r\n          collapsed : false,\r\n      }\r\n  }\r\n\r\n  render(){\r\n    return(\r\n      <Sider\r\n        trigger={null}\r\n        collapsible\r\n        collapsed={this.props.collapsed}\r\n      >\r\n        <div className=\"logo\" >\r\n          <Link to =\"/\">\r\n           <img src=\"/images/ukn_logo2.png\" alt=\"ukn_logo\" />\r\n          </Link>\r\n        </div>\r\n        <Menu theme=\"dark\" mode=\"inline\" selectedKeys={[this.props.history.location.pathname]}>\r\n          <SubMenu key=\"/contracts\" title={<span><Icon type=\"file-text\"/><span>Заявления</span></span>}>\r\n            <Menu.Item key=\"/contracts\">\r\n              <NavLink exact={true} to=\"/contracts\" activeClassName=\"active\">\r\n                <Icon type=\"file-text\" />\r\n                <span>Все заявления</span>\r\n              </NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/contracts/create\">\r\n              <NavLink exact={true} to=\"/contracts/create\" activeClassName=\"active\">\r\n                <Icon type=\"file-add\" />\r\n                <span>Создать заявление</span>\r\n              </NavLink>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n          <SubMenu key=\"/users\" title={<span><Icon type=\"team\"/><span>Сотрудники</span></span>}>\r\n            <Menu.Item key=\"/users/create\">\r\n              <NavLink exact={true} to=\"/users/create\" activeClassName=\"active\">\r\n                <Icon type=\"user-add\" />\r\n                <span>Добавить</span>\r\n              </NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/users\">\r\n              <NavLink exact={true} to=\"/users\" activeClassName=\"active\">\r\n                <Icon type=\"team\" />\r\n                <span>Все Сотрудники</span>\r\n              </NavLink>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n          <SubMenu key=\"/customers\" title={<span><Icon type=\"solution\"/><span>Клиенты</span></span>}>\r\n            <Menu.Item key=\"/customers/createcustomer\">\r\n              <NavLink to=\"/customers/createcustomer\"  activeClassName=\"active\">\r\n                <Icon type=\"usergroup-add\" />\r\n                <span>Добавить</span>\r\n              </NavLink>\r\n            </Menu.Item>\r\n            <Menu.Item key=\"/customers\">\r\n              <NavLink to=\"/customers\"  activeClassName=\"active\">\r\n                <Icon type=\"solution\" theme=\"outlined\" />\r\n                <span>Все клиенты</span>\r\n              </NavLink>\r\n            </Menu.Item>\r\n          </SubMenu>\r\n\r\n          <SubMenu key=\"sub1\" title={<span><Icon type=\"setting\"/><span>Настройки</span></span>}>\r\n            <Menu.Item>\r\n              <NavLink to=\"/settings\"  activeClassName=\"active\">\r\n                <Icon type=\"setting\" theme=\"outlined\" />\r\n                <span>Все</span>\r\n              </NavLink>\r\n            </Menu.Item>\r\n            {/*<Menu.Item key=\"sub1_2\">\r\n              <Icon type=\"exception\"/>\r\n              Статусы\r\n            </Menu.Item>\r\n            <Menu.Item key=\"sub1_3\">\r\n              <Icon type=\"file-unknown\"/>\r\n              Виды заявлений\r\n            </Menu.Item>*/}\r\n          </SubMenu>\r\n        </Menu>\r\n      </Sider>\r\n    )\r\n  }\r\n}\r\n\r\nexport default withRouter(LeftMenu);","import React, { Component } from 'react'\r\nimport { Form, Input, Button, Checkbox, Select, Row, Col, Collapse } from 'antd'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { getUser, updatedUser, insertUser} from '../../actions/UserListActions'\r\nimport { getSettings } from '../../actions/SettingsActions'\r\nimport Preloader from '../Preloader'\r\nconst FormItem = Form.Item;\r\n\r\nconst defaultGrid = {\r\n    xs : 12,\r\n    sm : 24, \r\n    md : 20,\r\n    lg : 12,  \r\n    xl : 8,\r\n}\r\n\r\n/**\r\n *  Redux field with antd https://codesandbox.io/s/jzyl70wpk\r\n */\r\n\r\nconst formItemLayout = {\r\n    labelCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 6 }\r\n    },\r\n    wrapperCol: {\r\n      xs: { span: 24 },\r\n      sm: { span: 14 }\r\n    }\r\n  };\r\n\r\nconst makeField = Component => ({ input, meta, children, hasFeedback, label, ...rest }) => {\r\n    const hasError = meta.touched && meta.invalid;\r\n    return (\r\n      <FormItem\r\n        {...formItemLayout}\r\n        label={label}\r\n        validateStatus={hasError ? \"error\" : \"success\"}\r\n        hasFeedback={hasFeedback && hasError}\r\n        help={hasError && meta.error}\r\n      >\r\n        <Component {...input} {...rest} children={children} />\r\n      </FormItem>\r\n    );\r\n  };\r\n\r\n  const AInput = makeField(Input);\r\n  const ACheckbox = makeField(Checkbox);\r\n  const ASelect = makeField(Select);\r\n\r\n/**\r\n * Форма редактирования пользователя\r\n * Поля меняются в зависимости от уровня доступа\r\n * 1 - Администратор\r\n * 2 - Менеджер\r\n * 3 - Исполнитель\r\n */\r\nclass UserEdit extends Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.state={\r\n        needToRedirect : false\r\n      }\r\n    }\r\n\r\n    componentWillMount(){\r\n      const { match, user, getOne, settings, loadSettings } = this.props;\r\n\r\n      if(match && typeof match.params.id !== 'undefined'){\r\n        getOne(user.id, match.params.id);\r\n      }\r\n\r\n      if(settings.settings_loaded){\r\n        loadSettings()\r\n      }\r\n    }\r\n\r\n    handleSubmit = values =>{\r\n      const { user, updateOne, createOne } = this.props;\r\n      delete values.re_password;\r\n      delete values.status_text;\r\n      delete values.is_active;\r\n      delete values.role_data;\r\n\r\n      if(values.is_active === true){\r\n        values.is_active = 1;\r\n      }\r\n      console.log(values);\r\n      if(values.id > 0){\r\n        updateOne(user.id, values);\r\n      }else{\r\n        createOne(user.id, values);\r\n      }\r\n      this.setState({\r\n            needToRedirect : true\r\n      })\r\n    }\r\n\r\n    render(){\r\n      const { user, handleSubmit, pristine, submitting, userFetch, settings, grid, initialValues } = this.props;\r\n      if(this.state.needToRedirect) return(<Redirect to=\"/users\"/>)\r\n      if(userFetch) return <Preloader/>\r\n\r\n      return(\r\n        <Row type=\"flex\" justify=\"left\">\r\n          <Col {...grid} >\r\n            <Form onSubmit={handleSubmit(this.handleSubmit)}>\r\n              <Field type=\"hidden\" component=\"input\" name=\"id\"/>\r\n              {user.id !== initialValues.id &&\r\n                <Field label=\"Активнвость\" name=\"is_active\" component={ACheckbox} type=\"checkbox\" />\r\n              }\r\n              <Field label=\"Имя\" name=\"name\" component={AInput} placeholder=\"Имя\" hasFeedback />\r\n              <Field label=\"Фамилия\" name=\"surename\" component={AInput} placeholder=\"Фамилия\" />\r\n              <Field label=\"Логин\" name=\"login\" component={AInput} placeholder=\"\" />\r\n              {this.props.userStatus === 1 &&\r\n                <Field \r\n                  label=\"Статус\" \r\n                  component={ASelect}  \r\n                  name=\"role_id\"\r\n                >\r\n                  {settings.data.user_roles && settings.data.user_roles.map(role =>\r\n                      <Select.Option value={role.id} key={role.id}>\r\n                          {role.role_name}\r\n                      </Select.Option>\r\n                  )}\r\n                </Field>\r\n              }\r\n              {this.props.userStatus === 1 &&\r\n              (<Collapse bordered={false}>\r\n                  <Collapse.Panel\r\n                  style={{border:0}}\r\n                  header='Изменить пароль'\r\n                  >\r\n                    <Field label=\"Пароль\" name=\"password\" component={AInput} type=\"password\"  />\r\n                    <Field label=\"Повторите Пароль\" name=\"re_password\" component={AInput} type=\"password\"  />\r\n                  </Collapse.Panel>\r\n              </Collapse>)\r\n              }\r\n              <Button htmlType=\"submit\" type=\"primary\" disabled={pristine || submitting }>Отправить</Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    }\r\n}\r\n\r\n\r\nconst validate = values => {\r\n  const errors = {};\r\n  if(values.password !== values.re_password){\r\n      errors.re_password=\"Пароли должны совпадать.\";\r\n  }\r\n  if(!values.name){\r\n      errors.name = \"Необходимо указать имя пользователя.\"\r\n  }\r\n  if(/^[а-яёА-ЯЁ]+$/.test(values.name) === false){\r\n      errors.name = \"Имя пользователя обязательно и  должно содержать только кириллицу\"\r\n  }\r\n  if(!values.login){\r\n      errors.login = \"Необходимо указать Логин\"\r\n  }\r\n  if(/^[a-zA-Z1-9]+$/.test(values.login) === false){\r\n      errors.login = \"В логине могут использоваться только латинские буквы и цифры\"\r\n  }\r\n  \r\n  if(!values.role){\r\n      errors.role = \"Необходимо выбрать роль пользователя\";\r\n  }\r\n  \r\n  return errors;\r\n  }\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {\r\n    user : state.user,\r\n    userStatus: state.user.role,\r\n    role : ownProps.userRoles,\r\n    settings : state.settings,\r\n    userFetch : state.userList.userIsLoading,\r\n    initialValues : state.userList.currentUserData,\r\n    grid : ownProps.gridSettings  || defaultGrid\r\n    //initialValues: {\r\n    //    id: ownProps.initialValues.id ? ownProps.initialValues.id : 0, \r\n    //    is_active: ownProps.initialValues.is_active,\r\n    //    name : ownProps.initialValues.name,\r\n    //    surename : ownProps.initialValues.surename,\r\n    //    login : ownProps.initialValues.login,\r\n    //    role : ownProps.initialValues.role\r\n    //}\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n  getOne : (uId, id) => dispatch(getUser(uId,id)),\r\n  createOne : (uId, formData) => dispatch(insertUser(uId, formData)),\r\n  updateOne : (uId, formData)=> dispatch(updatedUser(uId, formData)),\r\n  loadSettings : () => dispatch(getSettings())\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({\r\n  form:'UserForm',\r\n  validate,\r\n  enableReinitialize : true,\r\n  destroyOnUnmount: true\r\n})(UserEdit))\r\n\r\n//export default UserEdit = reduxForm({\r\n//    form: 'UserForm',\r\n//    validate, // a unique identifier for this form\r\n//\r\n//  },mapStateToProps)(UserEdit)\r\n\r\n  //export default UserEdit = connect(\r\n  //  state => ({\r\n  //    initialValues: state.userList.currentUserData // pull initial values from account reducer\r\n  //  })\r\n  //)(UserEdit);\r\n\r\n","import React, { Component } from 'react'\r\nimport { Table, Drawer, Checkbox, Divider, Spin, Row, Button, Popconfirm, Input, Icon, Menu, Dropdown } from 'antd'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\nimport UserEdit from '../components/forms/UserEdit'\r\nimport { getUserList, getUser, updatedUser, deleteUser, clearForm, addCondition, clearSearchStr, setPage } from '../actions/UserListActions'\r\n\r\nconst Search = Input.Search;\r\n\r\nclass UsersList extends Component{\r\n  constructor(props){\r\n    super(props)\r\n    this.state = {\r\n      is_active : 1,\r\n      visible:false,\r\n      needToRedirect : false\r\n    }\r\n    this.toggleDrawer = this.toggleDrawer.bind(this)\r\n  }\r\n\r\n  toggleDrawer = incId =>{\r\n    this.setState({\r\n      visible: true\r\n    })\r\n    this.props.getCurrentUser(this.props.user.id, incId)\r\n    //action to load data to form in drawer\r\n  }\r\n\r\n  closeDrawer = () =>{\r\n    this.setState({\r\n      visible : false\r\n    })\r\n  }\r\n\r\n  componentWillMount(){\r\n    const { user, userList, getUserList } = this.props;\r\n    getUserList(user.id, userList.searchData);\r\n  }\r\n\r\n  handleSubmit = (values) => {\r\n    this.props.updatedUser(this.props.user.id, values);\r\n    this.closeDrawer();\r\n  };\r\n  deleteAction = (delId) => {\r\n    this.props.deleteById(this.props.user.id, delId);\r\n  }\r\n\r\n  createAction = () => {\r\n      this.props.clearForm();\r\n      this.setState({\r\n        visible: true\r\n      });\r\n\r\n  }\r\n\r\n  submitSearch = (str) => {\r\n    const { user, userList, getUserList } = this.props;\r\n    //addCond('searchString', str);\r\n    getUserList(user.id, userList.searchData);\r\n  }\r\n  onPaginationChange = (page) => {\r\n    const { user, addCond, userList, getUserList, setPage } = this.props\r\n    let offset =  page.current === 1 ? 0 : userList.searchData.limit * (page.current-1);\r\n    setPage(page.current)\r\n    addCond('offset',offset);\r\n    getUserList(user.id, userList.searchData);\r\n  }\r\n  onPageSizeChange = (current, pageSize) => {\r\n    const { user, userList, addCond, getUserList } = this.props\r\n    addCond('limit',pageSize);\r\n    getUserList(user.id, userList.searchData);\r\n  }\r\n\r\n  render(){\r\n    const { userList, addCond } = this.props;\r\n    const columns = [\r\n    {\r\n      title : 'Активность',\r\n      dataIndex : 'is_active',\r\n      key : 'is_active',\r\n      render : (text,record) => (\r\n        <Checkbox checked={record.is_active} />\r\n      )\r\n    },\r\n    {\r\n      title : 'Имя',\r\n      key : 'name',\r\n      dataIndex : 'name',\r\n    },\r\n    {\r\n      title : 'Фамилия',\r\n      dataIndex : 'surename',\r\n      key : 'surename'\r\n    },\r\n    {\r\n      title : 'Должность',\r\n      dataIndex : 'position',\r\n      key : 'position'\r\n    },\r\n    {\r\n      title : 'Действия',\r\n      key : 'Action',\r\n      render : (text,record) => {\r\n        const titleString = \"Вы уверены что хотите удалить пользователя \" + record.name + \"?\";\r\n        const menu = (\r\n          <Menu>\r\n            <Menu.Item key=\"0\"><Link to={\"/users/edit/\" + record.id}>Редактировать</Link></Menu.Item>\r\n            <Menu.Item key=\"1\">\r\n              <Popconfirm onConfirm={() => this.deleteAction(record.id)} title={titleString}>\r\n                <a className=\"action-title\">Удалить</a>\r\n              </Popconfirm>\r\n            </Menu.Item>\r\n          </Menu>\r\n        )\r\n        return (\r\n          <Dropdown overlay={menu} trigger={['click']}>\r\n            <a>Действия <Icon type=\"down\" /></a>\r\n          </Dropdown>\r\n        ) \r\n      }\r\n    }]\r\n    return(\r\n      <div>\r\n        {/*<Row>\r\n          <Link to=\"/users/create\"> <Button>Добавить пользователя</Button></Link>\r\n        </Row>*/}\r\n        <Row>\r\n          <Search\r\n            placeholder=\"Поиск...\"\r\n            value={userList.searchData.whereString}\r\n            onChange={e => addCond('whereString',e.target.value)}\r\n            onSearch={this.submitSearch}\r\n            style={{ maxWidth: 400 }}\r\n            suffix={userList.searchData.whereString.length > 0 ? <span key={userList.searchData.whereString} className=\"closePicker\" onClick={e => addCond('whereString','')}><Icon type=\"close\" theme=\"outlined\" /></span> : ''}\r\n            enterButton\r\n          />\r\n        </Row>\r\n        <Table  \r\n          rowKey=\"id\" \r\n          columns={columns} \r\n          dataSource={this.props.userList.data}\r\n          loading={this.props.userList.isLoading}\r\n          onChange={this.onPaginationChange}\r\n          pagination={{total:userList.count, pageSize : userList.searchData.limit, showSizeChanger : true, onShowSizeChange : this.onPageSizeChange, current : userList.page }}\r\n          locale={{ emptyText : \"Пользователей не найдено\"}}\r\n        />\r\n        <Drawer\r\n          width=\"640\"\r\n          placement=\"right\"\r\n          closable={true}\r\n          onClose={this.closeDrawer}\r\n          visible={this.state.visible}\r\n          destroyOnClose={true}\r\n        >\r\n        <div>\r\n          <p>Изменение данных Пользователя</p>\r\n        </div>\r\n        <Divider/>\r\n          <div>\r\n            {this.props.userList.userIsLoading ? \r\n              <Spin/> :\r\n              <UserEdit \r\n                onSubmit={this.handleSubmit} \r\n                initialValues={this.props.userList.currentUserData} \r\n                userRoles={this.props.user.userRoles} \r\n              />\r\n            }\r\n          </div>\r\n        </Drawer>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store =>{\r\n    return {\r\n      user : store.user,\r\n      userList : store.userList\r\n    }\r\n  }\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n    getUserList : (id, condition) => dispatch(getUserList(id, condition)),\r\n    getCurrentUser : (authUserId, incUserId) => dispatch(getUser(authUserId, incUserId)),\r\n    updatedUser : (authorizeId, formData) => dispatch(updatedUser(authorizeId, formData)),\r\n    clearForm : () => dispatch(clearForm()),\r\n    addCond : (type, value) => dispatch(addCondition(type, value)),\r\n    resetSearch : () => dispatch(clearSearchStr()),\r\n    deleteById : (id, deleteId) => dispatch(deleteUser(id, deleteId)),\r\n    setPage : (page) => dispatch(setPage(page))\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(UsersList));\r\n//export default UsersList;","import React, { Component } from 'react'\r\nimport { Avatar, Menu, Dropdown, Icon, Modal, Spin } from 'antd'\r\nimport UserEdit from '../../components/forms/UserEdit'\r\n\r\n\r\nclass LoggedUser extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {isModalOn: false};\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick = () => {\r\n    this.setState(state => ({\r\n      isModalOn: !state.isModalOn\r\n    }));\r\n    this.props.loadProfile(this.props.user.id, this.props.user.id);\r\n  }\r\n\r\n  cancelModal = () => {\r\n    this.setState(state => ({\r\n        isModalOn : false\r\n    }))\r\n  }\r\n  onFormSubmit = (values) => {\r\n    this.cancelModal();\r\n    this.props.onSubmit(values);\r\n  }\r\n\r\n\r\n  render(){\r\n    const dropDownMenu = (\r\n      <Menu>\r\n        <Menu.Item>\r\n          <span onClick={this.handleClick}><Icon type=\"setting\"/> Настройки</span>\r\n        </Menu.Item>\r\n        <Menu.Item>\r\n          <span onClick={this.props.logOut}><Icon type=\"logout\" /> Выход</span>\r\n        </Menu.Item>\r\n      </Menu>\r\n    )\r\n\r\n    return(\r\n      <div>\r\n        <Avatar icon=\"user\" size={30} shape=\"circle\" />\r\n        <span style={{padding:'10px'}}>{`${this.props.user.name} ${this.props.user.surename}`}</span>\r\n        <Dropdown overlay={dropDownMenu}  trigger={['click']}>\r\n          <a className=\"ant-dropdown-link\">\r\n            действия <Icon type=\"down\" />\r\n          </a>\r\n        </Dropdown>\r\n        <Modal\r\n          footer={false}\r\n          visible={this.state.isModalOn}\r\n          onCancel={this.handleClick}\r\n          title=\"Информация о профиле\"\r\n        >\r\n          {this.props.isLoading ? \r\n            <Spin/> :\r\n              <UserEdit \r\n              onSubmit={this.onFormSubmit} \r\n              initialValues={this.props.ownProfile} \r\n              userRoles={this.props.user.userRoles}\r\n              gridSettings = {{ xs : 24, sm : 24, md : 24,lg : 24,  xl : 24}}\r\n            />\r\n          }  \r\n        </Modal>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default LoggedUser;","\r\nimport React, { Component } from 'react'\r\nimport { Icon, Popover, Badge } from 'antd'\r\nimport { Link} from 'react-router-dom'\r\n\r\n\r\n\r\nclass Notificator extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    console.log('nofigicator');\r\n    console.log(this.props.notifications);\r\n    this.state = {\r\n        visible: false,\r\n    }\r\n    this.handleVisibleChange = this.handleVisibleChange.bind(this);\r\n  }\r\n\r\n  handleVisibleChange = () => {\r\n      this.setState({\r\n          visible : !this.state.visible,\r\n      })\r\n      this.props.viewHandler();\r\n  }\r\n\r\n  render(){\r\n      const { notifications } = this.props;\r\n      const content = (\r\n        <div>\r\n        {notifications.data.length > 0 ? \r\n          notifications.data.map(item =><Link to={`/contracts/edit/${item.id}`} key={item.id}><div >{item.message}</div></Link>) \r\n          : <div>Уведомлений нет</div>}\r\n        </div>\r\n      );\r\n      return(\r\n        <Popover\r\n          content={content}\r\n          trigger=\"click\"\r\n          visible={this.state.visible}\r\n          onVisibleChange={this.handleVisibleChange}\r\n          title={notifications.data.length > 0 ? 'Новые уведомления' : 'Новых уведомлений нет'}\r\n        >\r\n          <Badge count={this.props.notifications.count} className=\"badge-info\">\r\n            <Icon type=\"message\" theme=\"outlined\" style={{ fontSize: 22, cursor :'pointer', marginLeft:15 }} />\r\n          </Badge>\r\n        </Popover>\r\n      );\r\n  }\r\n}\r\n\r\nexport default Notificator;","import React from 'react'\r\nimport { Form } from 'antd'\r\n\r\nconst FormItem = Form.Item;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xl: { span: 24 },\r\n    xs: { span: 24 },\r\n    sm: { span: 24 }\r\n  },\r\n  wrapperCol: {\r\n    xl: { span: 24 },\r\n    xs: { span: 24 },\r\n    sm: { span: 24 }\r\n  }\r\n};\r\n  /**\r\n   * Wrapper for antd form Components\r\n   * @param Component \r\n   */\r\n  const FieldWrapper = Component => ({ input, meta, children, hasFeedback, label, ...rest }) => {\r\n    const hasError = meta.touched && meta.invalid;\r\n    return (\r\n      <FormItem\r\n        {...formItemLayout}\r\n        label={label}\r\n        validateStatus={hasError ? \"error\" : \"success\"}\r\n        hasFeedback={hasFeedback && hasError}\r\n        help={hasError && meta.error}\r\n      >\r\n        <Component {...input} {...rest} children={children} />\r\n      </FormItem>\r\n    );\r\n  };\r\n\r\n  export default FieldWrapper","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Form, Input, Button, Row, Col } from 'antd'\r\nimport FieldWrapper from './FieldWrapper'\r\nimport {insertCustomer, updateCustomer, getCurrentCustomer, clearInsert} from '../../actions/CustomersActions'\r\n\r\nconst AInput = FieldWrapper(Input);\r\n\r\nconst defaultGrid = {\r\n  xs : 12,\r\n  sm : 24, \r\n  md : 20,\r\n  lg : 12,  \r\n  xl : 8,\r\n}\r\n\r\nclass CustomerEdit extends Component {\r\n    constructor(props){\r\n      super(props)\r\n      this.state = {\r\n          needRedirect : false\r\n      }\r\n    }\r\n    componentWillMount(){\r\n      const { match, user, getOne } = this.props;\r\n      //console.log(Object.keys(match.params).length);\r\n      if(typeof match !== 'undefined' && Object.keys(match.params).length !== 0){\r\n          getOne(user.id, match.params.id);\r\n      }\r\n    }\r\n\r\n    componentWillUnmount(){\r\n      const { clearAll, noRedirect } = this.props\r\n      if(!noRedirect) clearAll();\r\n    }\r\n\r\n    submitForm = (values) => {\r\n      const { user, insertOne, updateOne, callback } = this.props;\r\n      if(values.id > 0){\r\n        updateOne(user.id, values);\r\n      }else{\r\n        insertOne(user.id, values);\r\n      }\r\n      this.setState({\r\n        needRedirect : true\r\n      })\r\n      if(callback){\r\n        callback();\r\n      }\r\n    }\r\n\r\n    render() {\r\n      const { handleSubmit, pristine,submitting, fetching, match, noRedirect, grid } = this.props;\r\n      if(this.state.needRedirect &&(!noRedirect)) return <Redirect to=\"/customers\"/>\r\n      return (\r\n        <Row>\r\n          <Col {...grid} >\r\n            <Form onSubmit={handleSubmit(this.submitForm)}>\r\n              <Field type=\"hidden\" component=\"input\" name=\"id\"/>\r\n              <Field label=\"Имя\" name=\"name\" component={AInput} placeholder=\"Имя\" hasFeedback />\r\n              <Field label=\"Фамилия\" name=\"firstname\" component={AInput} placeholder=\"Фамилия\" />\r\n              <Field label=\"Отчество\" name=\"secondname\" component={AInput} placeholder=\"Отчество\" />\r\n              <Field label=\"Почта\" type=\"email\" name=\"email\" component={AInput} placeholder=\"Почта\" />\r\n              <Field addonBefore=\"+7\" label=\"Телефон\" name=\"phone\" component={AInput} placeholder=\"Теелфон\" />\r\n              <Button loading={fetching} htmlType=\"submit\" type=\"primary\" disabled={pristine || submitting }>{(typeof match !== 'undefined' && Object.keys(match.params).length !== 0) ? \"Изменить\" : \"Создать\"}</Button>\r\n            </Form>\r\n          </Col>\r\n        </Row>\r\n      )\r\n    }\r\n}\r\n\r\nconst validate = values => {\r\n    const errors = {};\r\n    if(!values.name){\r\n      errors.name = \"Необходимо указать имя.\"\r\n    }\r\n    if(/^[а-яёА-ЯЁ]+$/.test(values.name) === false){\r\n      errors.name = \"Имя обязательно и  должно содержать только кириллицу.\"\r\n    }\r\n    if(!values.firstname){\r\n      errors.firstname = \"Необходимо указать фамилию.\"\r\n    }\r\n    if(/^[а-яёА-ЯЁ]+$/.test(values.firstname) === false){\r\n      errors.firstname = \"Фамилия обязательна и  должна содержать только кириллицу.\"\r\n    }\r\n    if(!values.phone){\r\n      errors.phone = \"Телефон обязателен к заполнению\"\r\n    }\r\n    if(/^[1-90-9]+$/.test(values.phone) === false){\r\n      errors.phone = \"Телефон должен состоять только из цифр.\"\r\n    }\r\n  \r\n    return errors;\r\n  }\r\n  \r\n  function mapStateToProps(state, ownProps) {\r\n    return {\r\n      user: state.user,\r\n      userStatus : '',\r\n      noRedirect : ownProps.noRedirect || false,\r\n      newForm : state.customersList.currentCustomer.id || 0,\r\n      fetching : state.customersList.updating,\r\n      contractStatuses : ownProps.statuses,\r\n      grid : ownProps.gridSettings || defaultGrid,\r\n      initialValues : state.customersList.currentCustomer,\r\n      callback : ownProps.onAdd || false\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch =>({\r\n    insertOne : (uid, formData) => dispatch(insertCustomer(uid, formData)),\r\n    updateOne : (uid, formData) => dispatch(updateCustomer(uid, formData)),\r\n    getOne : (uid, id) => dispatch(getCurrentCustomer(uid, id)),\r\n    clearAll : () => dispatch(clearInsert())\r\n  })\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(reduxForm({\r\n    form:'CustomerForm',\r\n    validate,\r\n    enableReinitialize : true,\r\n    destroyOnUnmount: true\r\n  })(CustomerEdit))\r\n","import React, { Component, Fragment } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { Table, Input, Icon, Modal, Dropdown, Menu, Popconfirm } from 'antd';\r\nimport { getCustomersList, getCurrentCustomer, updateCustomer, deleteCustomer, insertCustomer, setSearch, setPage } from '../actions/CustomersActions';\r\nimport CustomerEdit from '../components/forms/CustomerEdit'\r\nconst Search = Input.Search;\r\n\r\n\r\nexport class CustomersList extends Component {\r\n\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n        openModal : false\r\n    }\r\n    this.openDetail = this.openDetail.bind(this);\r\n  }\r\n\r\n  componentWillMount = () =>{\r\n    const { user, getCustomers } = this.props;\r\n    getCustomers(user.id);\r\n  }\r\n\r\n  openDetail = (customerId) => {\r\n    const { user, getCustomer } = this.props;\r\n    this.setState(state => ({\r\n      openModal: true\r\n    }));\r\n    console.log('customer_id ->' + customerId);\r\n    getCustomer(user.id, customerId);\r\n  }\r\n  closeModal = () => {\r\n    this.setState(state => ({\r\n      openModal: false\r\n    }));\r\n  }\r\n\r\n  clearSearchString = () => {\r\n    this.props.clearSearch();\r\n  }\r\n\r\n  submitSearch = (str) => {\r\n    const { user, customers, getCustomers } = this.props;\r\n    getCustomers(user.id, customers.searchData);\r\n  }\r\n\r\n  handleFormSubmit = (values) => {\r\n    const { user, customers, updateOne } = this.props;\r\n    updateOne(user.id, values, customers.searchData.searchString);\r\n    this.closeModal();\r\n  }\r\n  deleteAction = (deleteId) => {\r\n    const { user, customers, deleteOne } = this.props;\r\n    deleteOne(user.id, deleteId, customers.searchData.searchString)\r\n  }\r\n\r\n  onPaginationChange = (page) => {\r\n    const { user, customers, setCondition, setPage, getCustomers} = this.props;\r\n    let offset =  page.current === 1 ? 0 : customers.searchData.limit * (page.current-1);\r\n    setPage(page.current);\r\n    setCondition('offset', offset);\r\n    getCustomers(user.id, customers.searchData);\r\n  }\r\n  onPageSizeChange = (current, pageSize) => {\r\n    const { user, customers, setCondition, getCustomers} = this.props;\r\n    setCondition('limit', pageSize);\r\n    getCustomers(user.id, customers.searchData)\r\n  }\r\n\r\n  render() {\r\n    const { customers, setCondition } = this.props;\r\n    const columns = [{\r\n      title: 'Имя',\r\n      dataIndex: 'name',\r\n      //key: 'name',\r\n    },\r\n    {\r\n      title: 'Фамилия',\r\n      dataIndex: 'firstname',\r\n      //key: 'firstname',\r\n    },\r\n    {\r\n      title: 'Отчество',\r\n      dataIndex: 'secondname',\r\n      //key: 'secondname',\r\n    },\r\n    {\r\n      title: 'Почта',\r\n      dataIndex: 'email',\r\n      //key: 'email',\r\n    },\r\n    {\r\n      title: 'Телефон',\r\n      dataIndex: 'phone',\r\n      //key: 'phone',\r\n    },\r\n    {\r\n      title: 'Действия',\r\n      render : (text, record) => {\r\n        const titleString = \"Вы уверены что хотите удалить клиента \" + record.name + \"?\";\r\n        const menu = (\r\n          <Menu>\r\n            <Menu.Item key=\"0\"><Link to={\"/customers/edit/\"+ record.id }>{ /*<a onClick={()=>this.openDetail(record.id)}>Подробнее</a> */}Подробнее</Link></Menu.Item>\r\n            {/*<Menu.Item key=\"1\">\r\n              <Popconfirm onConfirm={() => this.deleteAction(record.id)} title={titleString}>\r\n                <a className=\"action-title\">Удалить</a>\r\n              </Popconfirm>\r\n            </Menu.Item>*/}\r\n          </Menu>\r\n        )\r\n        return (\r\n          <Dropdown overlay={menu} trigger={['click']}>\r\n            <a>Действия <Icon type=\"down\" /></a>\r\n          </Dropdown>\r\n        )\r\n      }\r\n    }]\r\n    return (\r\n      <Fragment>\r\n        {/*<Link to=\"/customers/createcustomer\">Создать клиента</Link>*/}\r\n        <Search\r\n          placeholder=\"Поиск...\"\r\n          value={customers.searchData.whereString}\r\n          onChange={e => setCondition('whereString', e.target.value)}\r\n          onSearch={this.submitSearch}\r\n          style={{ maxWidth: 400 }}\r\n          suffix={customers.searchData.whereString.length > 0 ? <span key={customers.searchData.whereString} className=\"closePicker\"><Icon type=\"close\" theme=\"outlined\" onClick={e => setCondition('whereString', '')}/></span> : ''}\r\n          enterButton\r\n        />\r\n        <Table  \r\n          rowKey=\"id\" \r\n          columns={columns}\r\n          dataSource={customers.data}\r\n          loading = {customers.loading}\r\n          onChange={this.onPaginationChange}\r\n          pagination={{total:customers.count, pageSize : customers.searchData.limit, showSizeChanger : true, onShowSizeChange : this.onPageSizeChange, current : customers.page }}\r\n          locale={{ emptyText : \"Клиентов не найдено\"}}\r\n        />\r\n        <Modal\r\n          footer={false}\r\n          visible={this.state.openModal}\r\n          onCancel={this.closeModal}\r\n          title=\"Информация о клиенте\"\r\n        >\r\n          <CustomerEdit\r\n            onSubmit={this.handleFormSubmit}\r\n            customerData={customers.currentCustomer}\r\n          />\r\n        </Modal>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user : state.user,\r\n  customers  : state.customersList\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  getCustomers : (userId, searchStr) => dispatch(getCustomersList(userId,searchStr)),\r\n  getCustomer : (userId, customerId) => dispatch(getCurrentCustomer(userId,customerId)),\r\n  updateOne : (userId, formData, searchStr) => dispatch(updateCustomer(userId, formData, searchStr)),\r\n  deleteOne : (userId, deleteId, str) => dispatch(deleteCustomer(userId, deleteId , str)),\r\n  insertOne : (userId, formData) => dispatch(insertCustomer(userId,formData)),\r\n  setCondition : (type, value) => dispatch(setSearch(type, value)),\r\n  setPage : (page) => dispatch(setPage(page))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(CustomersList)\r\n","import React, { Component, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Form, Icon, Input, Button, Modal, Select, Row, Col, Steps, DatePicker } from 'antd';\r\nimport FieldWrapper from './FieldWrapper'\r\nimport CustomerEdit from '../forms/CustomerEdit'\r\nimport moment from 'moment'\r\n\r\nimport { getCustomersList, insertCustomer} from '../../actions/CustomersActions'\r\nimport { getUserList } from '../../actions/UserListActions'\r\nimport  { createContract } from '../../actions/WorkSheetActions'\r\n\r\nconst Step = Steps.Step;\r\nconst AInput = FieldWrapper(Input);\r\nconst ASelect = FieldWrapper(Select);\r\nconst ATextArea = FieldWrapper(Input.TextArea);\r\nconst FormItem = Form.Item;\r\nconst formItemLayout = {\r\n    labelCol: {\r\n      xl: { span: 24 },\r\n      xs: { span: 24 },\r\n      sm: { span: 24 }\r\n    },\r\n    wrapperCol: {\r\n      xl: { span: 24 },\r\n      xs: { span: 24 },\r\n      sm: { span: 24 }\r\n    }\r\n  };\r\nconst DateWrapper = ({ input, meta, children, hasFeedback, label, value, format, ...rest }) => {\r\n    const hasError = meta.touched && meta.invalid;\r\n    return (\r\n      <FormItem\r\n        {...formItemLayout}\r\n        label={label}\r\n        validateStatus={hasError ? \"error\" : \"success\"}\r\n        hasFeedback={hasFeedback && hasError}\r\n        help={hasError && meta.error}\r\n      >\r\n        <DatePicker {...input} {...rest} value={input.value === '' ? null : moment(input.value) } />\r\n      </FormItem>\r\n    );\r\n  };\r\n\r\n\r\nclass CreateContractForm extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        step : 0,\r\n        showCustomersForm : false,\r\n        needToRedirect : false\r\n      }\r\n    }\r\n\r\n    componentWillMount = () =>{\r\n      const { user, getCustomers, getUsers } = this.props;\r\n      getCustomers(user.id);\r\n      getUsers(user.id)\r\n    }\r\n\r\n    increaseStep = () => {\r\n      this.setState({\r\n          step : this.state.step + 1\r\n      })\r\n    }\r\n    decreaseStep = () => {\r\n      this.setState({\r\n          step : this.state.step - 1 > 0 ? this.state.step - 1 : 0\r\n      })\r\n    }\r\n\r\n    toggleCreateCustomersForm = () => {\r\n      this.setState({\r\n          showCustomersForm : false\r\n      })\r\n    }\r\n\r\n    onFormSubmit = (values) => {\r\n      const { user, createOne } = this.props;\r\n      //values.date_deadline = Date.parse(values.date_deadline);\r\n      //values.date_deadline = moment(values.date_deadline).format(\"X\");\r\n      values.date_deadline = moment(values.date_deadline).format(\"YYYY-MM-DD HH:mm:ss\");\r\n      let sendValues = {...values};\r\n      console.log(sendValues);\r\n     // let modifiedContractors = sendValues.contractor.map(val => {\r\n     //   let obj = {id : val}\r\n     //   return obj;\r\n     // })\r\n     // sendValues.contractor = modifiedContractors;\r\n      createOne(user.id, sendValues);\r\n      this.setState({\r\n        needToRedirect:true\r\n      })\r\n    }\r\n\r\n    openForm = () => {\r\n        this.setState({\r\n          showCustomersForm : true\r\n        })\r\n    }\r\n    render() {\r\n      const { handleSubmit, pristine,submitting, workTypes, customers, contractors, statuses } = this.props;\r\n      if(this.state.needToRedirect) return <Redirect to=\"/contracts\"/>\r\n      return (\r\n        <Fragment>\r\n          <Row type=\"flex\" justify=\"center\" gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n            <Col xs={12} sm={24} md={20} lg={24} xl={12}>\r\n              <Steps current={this.state.step}>\r\n                <Step title=\"Вид работ\" description=\"Описание, тип\" icon={<Icon type=\"exception\" theme=\"outlined\" />} />\r\n                <Step title=\"Данные о заявителе\" description=\"\" icon={<Icon type=\"idcard\"  />} />\r\n                <Step title=\"Срок сдачи\" description=\"Срок сдачи и исполнитель\" icon={<Icon type=\"calendar\" />} />\r\n                <Step title=\"Стоимость работ\" description=\"\" icon={<Icon type=\"calculator\" theme=\"outlined\" />} />\r\n              </Steps>\r\n            </Col>\r\n          </Row>\r\n          <Form onSubmit={handleSubmit(this.onFormSubmit)}>\r\n          <Row type=\"flex\" justify=\"center\" gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\r\n            <Col xs={12} sm={24} md={20} lg={12} xl={6} >\r\n              <Field label=\"Адрес\" name=\"address\" component={ATextArea} placeholder=\"Адрес\" />\r\n              <Field \r\n                label=\"Вид работ\" \r\n                component={ASelect} \r\n                name=\"type_of_work\"\r\n                showSearch\r\n                filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n              >\r\n                {workTypes.map( type =>\r\n                  <Select.Option value={type.id} key={type.id}>\r\n                    {type.work_type}\r\n                  </Select.Option>\r\n                )}\r\n              </Field>\r\n              <Field label=\"Дополнительная информация\" name=\"comment\" component={ATextArea} />\r\n              { this.state.step > 1 &&\r\n                <Fragment>\r\n                  <Field \r\n                    label=\"Исполнитель\" \r\n                    name=\"contractor\" \r\n                    component={ASelect}\r\n                    mode=\"multiple\"\r\n                    showSearch\r\n                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0} \r\n                  >\r\n                    {contractors.map( contractor =>\r\n                        <Select.Option key={contractor.id} value={contractor.id}>\r\n                          {contractor.name}\r\n                        </Select.Option>\r\n                    )}\r\n                  </Field>\r\n                  <Field \r\n                    label=\"Исполнить до\" \r\n                    name=\"date_deadline\" \r\n                    component={DateWrapper}\r\n                    disabledDate={(current)=>{\r\n                      return current && current.valueOf() < Date.now();\r\n                    }}\r\n                  />\r\n                  <Field \r\n                    label=\"Статус заявления\" \r\n                    name=\"status\" \r\n                    component={ASelect}\r\n                    defaultActiveFirstOption \r\n                  >\r\n                  {statuses.map(status =>\r\n                    <Select.Option key={status.id} value={status.id}>\r\n                      {status.type}\r\n                    </Select.Option>\r\n                    )}\r\n                  </Field>\r\n                </Fragment>\r\n              }\r\n              {this.state.step > 0 && <Button style={{marginRight:'10px'}} type=\"primary\" onClick={this.decreaseStep}><Icon type=\"left\" /> Назад</Button>}\r\n              {this.state.step < 3 && <Button type=\"primary\" onClick={this.increaseStep}>Далее <Icon type=\"right\" /></Button>}\r\n              {this.state.step === 3  && <Button style={{display:\"block\", marginTop : \"25px\"}} htmlType=\"submit\" type=\"primary\" disabled={pristine || submitting }>Создать</Button>} \r\n            </Col>\r\n            <Col xs={12} sm={24} md={20} lg={12} xl={6}>\r\n              { this.state.step > 0 &&\r\n                <Fragment>\r\n                  <Field \r\n                    label=\"Клиент\" \r\n                    name=\"customer_id\" \r\n                    component={ASelect}\r\n                    showSearch\r\n                    filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0}\r\n                    defaultActiveFirstOption={true}\r\n                    defaultValue={0}\r\n                  >\r\n                  <Select.Option key={0} value={0}>\r\n                    Не указан\r\n                  </Select.Option>\r\n                  {customers.map(customer => \r\n                    <Select.Option key={customer.id} value={customer.id}>\r\n                      {customer.name}\r\n                    </Select.Option>\r\n                  )}\r\n                  </Field>\r\n                  <Button type=\"primary\" onClick={this.openForm}><Icon type=\"user-add\" theme=\"outlined\" />Добавить заявителя</Button>\r\n                </Fragment>\r\n              }\r\n              {this.state.step > 2 &&\r\n                <Fragment>\r\n                  <Field \r\n                    label=\"Стоимость\" \r\n                    name=\"price\" \r\n                    component={AInput} \r\n                    placeholder=\"Полная стоимость\" \r\n                    addonAfter=\"руб\" />\r\n                  <Field label=\"Оплачено/Внесено\" name=\"paid\" component={AInput} placeholder=\"Оплачено\" addonAfter=\"руб\" />\r\n                </Fragment>\r\n              }\r\n            </Col> \r\n          </Row>\r\n          </Form>\r\n          <Modal\r\n            footer={false}\r\n            visible={this.state.showCustomersForm}\r\n            onCancel={this.toggleCreateCustomersForm}\r\n            title=\"Добавить клиента\"\r\n            destroyOnClose={true}\r\n          >\r\n            <CustomerEdit\r\n              noRedirect={true}\r\n              gridSettings = {{ xs : 24, sm : 24, md : 24,lg : 24,  xl : 24}}\r\n              onAdd={this.toggleCreateCustomersForm}\r\n            />\r\n          </Modal>\r\n        </Fragment>\r\n      );\r\n    }\r\n}\r\n\r\nconst validate = values => {\r\n  const errors = {};\r\n  if(!values.address){\r\n    errors.address = \"Укажите адрес работ.\"\r\n  }\r\n  if(!values.customer_id){\r\n    errors.customer_id = \"Вы должны выбрать клиента.\"\r\n  }\r\n  if(!values.status){\r\n    errors.status = \"Присвойте заявлению статус.\"\r\n  }\r\n  if(!values.date_deadline){\r\n    errors.date_deadline = \"Выберите дату окончания работ.\"\r\n  }\r\n  if(!values.contractor || values.contractor === []){\r\n    errors.contractor = \"Выберите исполнителя.\"\r\n  }\r\n  if(!values.type_of_work){\r\n    errors.type_of_work = \"Выберите тип работ\"\r\n  }\r\n  if(!values.price){\r\n    errors.price = \"Поле стоимость должно быть заполнено.\"\r\n  }\r\n  if(/^[1-90-9]+$/.test(values.price) === false){\r\n    errors.price = \"Поле должно быть заполнено числами.\"\r\n  }\r\n  if(/^[1-90-9]+$/.test(values.paid) === false){\r\n    errors.paid = \"Поле должно быть заполнено числами.\"\r\n  }\r\n  return errors;\r\n}\r\n  \r\n  function mapStateToProps(state, ownProps) {\r\n    return {\r\n      user : state.user,\r\n      customers : state.customersList.data,\r\n      contractors : state.userList.data,\r\n      st : state.customersList,\r\n      workTypes : state.settings.data.work_types,\r\n      statuses : state.settings.data.status_types,\r\n      initialValues : {\r\n          customer_id : state.customersList.lastInsertId || 0,\r\n          contractor : [],\r\n          status : 1\r\n      }\r\n    }\r\n  }\r\n  \r\n  const mapDispatchToProps = dispatch => ({\r\n    getCustomers : (uId) => dispatch(getCustomersList(uId)),\r\n    insertOne : (uid, formData) => dispatch(insertCustomer(uid, formData)),\r\n    getUsers : (uid) => dispatch(getUserList(uid)),\r\n    createOne : (uId, formData) => dispatch(createContract(uId,formData))\r\n  })\r\n  \r\n  export default connect(mapStateToProps, mapDispatchToProps)(reduxForm({\r\n    form:'CreateContractForm',\r\n    validate,\r\n    enableReinitialize : true,\r\n    destroyOnUnmount: true\r\n  })(CreateContractForm))\r\n\r\n//export default connect(\r\n//    mapStateToProps,\r\n//)(CreateCustomerForm);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Upload, Button, Icon} from 'antd'\r\nimport Preloader from '../Preloader';\r\nimport { Link } from 'react-router-dom'\r\n\r\nclass FileUploader extends Component {\r\n\r\n    download = (link) =>{\r\n      fetch(link, {method : \"GET\"})\r\n      .then(response => response.blob())\r\n      .then(blob => URL.createObjectURL(blob))\r\n      .then(url => {\r\n        window.open(url, '_blank');\r\n        //setTimeout(function(){\r\n        //  // For Firefox it is necessary to delay revoking the ObjectURL\r\n        //  window.URL.revokeObjectURL(url);\r\n        //}, 100)\r\n        URL.revokeObjectURL(url);\r\n        //return false;\r\n    });\r\n    //return false\r\n    }\r\n\r\n    preview = (file) =>{\r\n      console.log('link clicked');\r\n      console.log(file);\r\n      this.download(file.url)\r\n      //return false;\r\n    }\r\n\r\n    render() {\r\n      const fl =  [{\r\n        uid: '1',\r\n        name: 'xxx.png',\r\n        status: 'done',\r\n        response: 'Server Error 500', // custom error message to show\r\n        url: 'http://www.baidu.com/xxx.png',\r\n      }, {\r\n        uid: '2',\r\n        name: 'yyy.png',\r\n        status: 'done',\r\n        url: 'http://www.baidu.com/yyy.png',\r\n      }, {\r\n        uid: '3',\r\n        name: 'zzz.png',\r\n        status: 'error',\r\n        response: 'Server Error 500', // custom error message to show\r\n        url: 'http://www.baidu.com/zzz.png',\r\n      }]\r\n      const { actionUrl, callbackUploader,callbackRemover, files, contractId, loading } = this.props;\r\n        if(loading) return <Preloader/>\r\n        return (\r\n          <div>\r\n            <Upload \r\n              action={actionUrl}\r\n              multiple={true} \r\n              data={{upload_contract: contractId}}\r\n              headers={{\r\n                Authorization : `Bearer ${localStorage.getItem('app_token')}`,\r\n              }}\r\n              defaultFileList={files}\r\n              onChange={callbackUploader}\r\n              onRemove={callbackRemover}\r\n\r\n              openFileDialogOnClick={false}\r\n              //onPreview={this.preview}\r\n              //customRequest={this.ownRequest}\r\n            >  \r\n                <Button>\r\n                    <Icon type=\"upload\" /> Загрузить\r\n                </Button>\r\n            </Upload>\r\n            { /*files.map( file => \r\n              <a href={file.url} onClick={() => this.download(file.url)} download>{file.name}</a>\r\n            ) */}\r\n          </div>\r\n        );\r\n    }\r\n}\r\n\r\nFileUploader.propTypes  = {\r\n    actionUrl : PropTypes.string.isRequired,\r\n    callbackUploader : PropTypes.func.isRequired,\r\n    callbackRemover : PropTypes.func.isRequired,\r\n    contractId : PropTypes.number,\r\n    files : PropTypes.array,\r\n    loading : PropTypes.bool\r\n};\r\n\r\nexport default FileUploader;","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { Field, reduxForm } from 'redux-form'\r\nimport { Form, Icon, Input, Button, Select, Row, Col, Upload, DatePicker, message } from 'antd'\r\nimport FieldWrapper from './FieldWrapper'\r\nimport FileUploader from '../small/FileUploader'\r\nimport { getContract, updateContract, contractLeaving, fileUploaded, removeFile, clearFileList, fileListLoaded} from '../../actions/WorkSheetActions'\r\nimport { getUserList } from '../../actions/UserListActions'\r\nimport Preloader from '../Preloader'\r\nimport moment from 'moment'\r\n\r\nconst defaultGrid = {\r\n  xs : 12,\r\n  sm : 24, \r\n  md : 20,\r\n  lg : 12,  \r\n  xl : 8,\r\n}\r\n\r\n\r\nconst AInput = FieldWrapper(Input);\r\nconst ASelect = FieldWrapper(Select);\r\nconst ATextArea = FieldWrapper(Input.TextArea);\r\nconst FormItem = Form.Item;\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xl: { span: 24 },\r\n    xs: { span: 24 },\r\n    sm: { span: 24 }\r\n  },\r\n  wrapperCol: {\r\n    xl: { span: 24 },\r\n    xs: { span: 24 },\r\n    sm: { span: 24 }\r\n  }\r\n};\r\n\r\nconst DateWrapper = ({ input, meta, children, hasFeedback, label, value, format, ...rest }) => {\r\n  const hasError = meta.touched && meta.invalid;\r\n  return (\r\n    <FormItem\r\n      {...formItemLayout}\r\n      label={label}\r\n      validateStatus={hasError ? \"error\" : \"success\"}\r\n      hasFeedback={hasFeedback && hasError}\r\n      help={hasError && meta.error}\r\n    >\r\n      <DatePicker {...input} {...rest} value={input.value === '' ? null : moment(input.value) } format=\"YYYY-MM-DD\" />\r\n    </FormItem>\r\n  );\r\n};\r\n\r\nconst MultipleSelectWrapper = ({ input, meta, children, hasFeedback, label, value, ...rest }) => {\r\n  const hasError = meta.touched && meta.invalid;\r\n  return (\r\n    <FormItem\r\n      {...formItemLayout}\r\n      label={label}\r\n      validateStatus={hasError ? \"error\" : \"success\"}\r\n      hasFeedback={hasFeedback && hasError}\r\n      help={hasError && meta.error}\r\n    >\r\n      <Select {...input} {...rest} value={input.value ? input.value : []} children={children} />\r\n    </FormItem>\r\n  );\r\n};\r\n\r\n\r\nclass ContractEdit extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    //console.log(this.props);\r\n    this.state = {\r\n      needRedirect : false\r\n    }\r\n    this.onSubmit = this.onSubmit.bind(this);\r\n  }\r\n\r\n  componentWillMount = () =>{\r\n    const { match, user, getOne, userList, getUsers, loadFileList, contractId } = this.props;\r\n    console.log(this.props);\r\n    if(typeof match !== 'undefined'){\r\n      getOne(user.id, match.params.id);\r\n    }\r\n\r\n    if(!userList.isLoading){\r\n      getUsers(user.id);\r\n    }\r\n    \r\n  }\r\n\r\n  componentWillUnmount(){\r\n    const { leaveContract, clearFileList } = this.props;\r\n    leaveContract();\r\n    clearFileList();\r\n  }\r\n\r\n  uploadFiles = (files) => {\r\n    const status = files.file.status;\r\n    if(status === 'uploading'){\r\n      console.log('uploading');\r\n      console.log(files);\r\n    }\r\n    if(status === 'error'){\r\n      console.log('error uploading');\r\n      console.log(files);\r\n    }\r\n    if(status === 'done'){\r\n      console.log('success upload');\r\n      console.log(files);\r\n    }\r\n    if(status === 'removed'){\r\n      console.log('status remove');\r\n      console.log(files);\r\n    }\r\n\r\n  }\r\n\r\n  handleUpload = (file) => {\r\n    const { contractId } = this.props;\r\n   // const status = file.file.status;\r\n   // console.log('handle upload');\r\n    if(file.file.status === 'done'){\r\n      //file.file.url = `http://api/download/${file.file.name}`;\r\n      console.log(file);\r\n      //this.props.fileUpload(file);\r\n      file.fileList = file.fileList.map((file) => {\r\n        if (file.response) {\r\n          // Component will show file.url as link\r\n          file.url =  `/api/files/download/${contractId}/${file.response.fileName}`;\r\n          file.storagePath = file.response.tmpPath;\r\n        }\r\n        if(file.hasOwnProperty('response') && file.response.status === 'error'){\r\n          file.status = \"error\";\r\n          file.response = file.response.error.message\r\n        }\r\n        return file;\r\n      });\r\n      this.props.fileUpload(file.file);\r\n      message.success(\"Успешно загружено\")\r\n    }\r\n\r\n    //file.fileList = file.fileList.map((file) => {\r\n    //  if (file.response) {\r\n    //    // Component will show file.url as link\r\n    //    file.url =  `http://www.api/download/${file.response.fileName}`;\r\n    //  }\r\n    //  return file;\r\n    //});\r\n   // //return false;\r\n  }\r\n  handleRemove = (file) => {\r\n    const { files, removeFile, contractId, updateFileList } = this.props\r\n    //console.log('removing file');\r\n   // console.log(file);\r\n    //const fileIndex = files.indexOf(file);\r\n    //console.log(fileIndex);\r\n    removeFile(contractId,file.storagePath);\r\n    //const index = files.indexOf(file);\r\n    //const newFileList = files.slice();\r\n    //newFileList.splice(index, 1);\r\n    //console.log(newFileList);\r\n    ////return false;\r\n    //updateFileList(newFileList);\r\n  }\r\n\r\n  removeFiles = (file) => {\r\n    console.log('remove file');\r\n    console.log(file);\r\n  }\r\n\r\n  onSubmit = values => {\r\n    const { user, insertOne } = this.props;\r\n    delete values.date_started;\r\n    //values.date_deadline = moment(values.date_deadline).format(\"X\")\r\n    values.date_deadline = moment(values.date_deadline).format(\"YYYY-MM-DD HH:mm:ss\");\r\n    delete values.name;\r\n   \r\n    insertOne(user.id, values);\r\n    //this.setState({\r\n    //  needRedirect : true\r\n    //})\r\n  }\r\n\r\n  cReq = (data) => {\r\n      data.custom_id = 2;\r\n      console.log(data);\r\n      //setTimeout(()=>{\r\n      //  //data.onSuccess();\r\n      //  data.onError();\r\n      //},1000);\r\n\r\n\r\n  }\r\n\r\n  render() {\r\n    const {handleSubmit, pristine,submitting, user, files, contractFetching, settings , grid, userList, needRedirect, contractId, filesLoading} = this.props;\r\n    const disabler = user.role > 1 ? true : false;\r\n    if(needRedirect) return <Redirect to=\"/contracts\"/>\r\n\r\n    if(contractFetching) return <Preloader/>\r\n\r\n    return (\r\n      <Row>\r\n        <Col {...grid}>\r\n          <Form onSubmit={handleSubmit(this.onSubmit)}> \r\n            <Field type=\"hidden\" component=\"input\" name=\"id\"/>\r\n            <Field label=\"Номер договора\" name=\"contract_number\" component={AInput} disabled={disabler} placeholder=\"Фамилия\" />\r\n            <Field label=\"Адрес\" name=\"address\" component={ATextArea} placeholder=\"\" disabled={disabler} />\r\n            <Field label=\"Статус\" component={ASelect} name=\"status\">\r\n              {settings.status_types.map( status => \r\n                <Select.Option value={status.id} key={status.id}>\r\n                {status.type}\r\n              </Select.Option>\r\n              )}\r\n            </Field>\r\n            <Field \r\n              label=\"Исполнитель\" \r\n              name=\"contractor\" \r\n              component={MultipleSelectWrapper}\r\n              mode=\"multiple\"\r\n              showSearch\r\n              filterOption={(input, option) => option.props.children.toLowerCase().indexOf(input.toLowerCase()) >= 0} \r\n            >\r\n              <Select.Option key=\"0\" value={0}>\r\n                  Не указан\r\n              </Select.Option>\r\n              { userList.data.map( contractor =>\r\n                  <Select.Option key={contractor.id} value={contractor.id}>\r\n                      {contractor.name}\r\n                  </Select.Option>\r\n              )}\r\n            </Field>\r\n            <Field \r\n              label=\"Исполнить до\" \r\n              name=\"date_deadline\" \r\n              component={DateWrapper}\r\n              disabledDate={(current)=>{\r\n                  return current && current.valueOf() < Date.now();\r\n              }}\r\n            />\r\n\r\n            <Field label=\"Комментарии\" name=\"comment\" component={ATextArea} rows={4} placeholder=\"Комментарии\" />\r\n            <Field \r\n              label=\"Стоимость\" \r\n              name=\"price\" \r\n              component={AInput} \r\n              placeholder=\"Полная стоимость\" \r\n              addonAfter=\"руб\" />\r\n             <Field label=\"Оплачено/Внесено\" name=\"paid\" component={AInput} placeholder=\"Оплачено\" addonAfter=\"руб\" />\r\n            <Row className=\"add-info-row\">\r\n              <Col span={12}>\r\n                <div>Файлы :</div>\r\n                \r\n                <FileUploader\r\n                  actionUrl=\"/api/files/upload\"\r\n                  callbackUploader={this.handleUpload}\r\n                  callbackRemover={this.handleRemove}\r\n                  files={files}\r\n                  contractId={contractId}\r\n                  loading={filesLoading}\r\n                />\r\n                \r\n                {/*\r\n                <Upload \r\n                  action={this.props.uploadAction} \r\n                  onChange={this.uploadFiles}  \r\n                  //customRequest={this.cReq} \r\n                  multiple={true} \r\n                  data={{id: 2}}\r\n                >\r\n                  <Button>\r\n                    <Icon type=\"upload\" /> Загрузить\r\n                  </Button>\r\n                </Upload>\r\n                */}\r\n              </Col>\r\n              <Col span={12}>\r\n                Еще что-то\r\n              </Col>\r\n            </Row>\r\n            <Button loading={submitting} htmlType=\"submit\" type=\"primary\" disabled={pristine || submitting }>Изменить</Button>\r\n\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nconst validate = values => {\r\n  const errors = {};\r\n  if(!values.customer_id){\r\n    errors.customer_id = \"Вы должны выбрать клиента.\"\r\n  }\r\n  if(!values.status){\r\n    errors.status = \"Присвойте заявлению статус.\"\r\n  }\r\n  if(!values.date_deadline){\r\n    errors.date_deadline = \"Выберите дату окончания работ.\"\r\n  }\r\n  if(!values.contractor || values.contractor === []){\r\n    errors.contractor = \"Выберите исполнителя.\"\r\n  }\r\n  if(!values.type_of_work){\r\n    errors.type_of_work = \"Выберите тип работ\"\r\n  }\r\n  if(!values.price){\r\n    errors.price = \"Поле стоимость должно быть заполнено.\"\r\n  }\r\n  if(/^[1-90-9]+$/.test(values.price) === false){\r\n    errors.price = \"Поле должно быть заполнено числами.\"\r\n  }\r\n  if(/^[1-90-9]+$/.test(values.paid) === false){\r\n    errors.paid = \"Поле должно быть заполнено числами.\"\r\n  }\r\n  return errors;\r\n}\r\n\r\nfunction mapStateToProps(state, ownProps) {\r\n  return {\r\n    user : state.user,\r\n    userStatus : state.user,\r\n    contractId : state.contracts.currentContract.id,\r\n    contractFetching : state.contracts.contractLoading,\r\n    uploadAction : '/api/upload',\r\n    userList : state.userList,\r\n    contractStatuses : state.contracts.filterData.types,\r\n    settings : state.settings.data,\r\n    grid : ownProps.gridSettings || defaultGrid,\r\n    tv : state.contracts.currentContract,\r\n    files : state.contracts.currentContractFiles,\r\n    initialValues: state.contracts.currentContract,\r\n    needRedirect : state.contracts.contractIsUpdated,\r\n    filesLoading : state.contracts.filesIsLoading\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch =>({\r\n  getOne : (uId, contractId) => dispatch(getContract(uId, contractId)),\r\n  insertOne : (uId, formData, filterData) => dispatch(updateContract(uId,formData,filterData)),\r\n  getUsers : (uid) => dispatch(getUserList(uid)),\r\n  leaveContract : () => dispatch(contractLeaving()),\r\n  fileUpload : (file) => dispatch(fileUploaded(file)),\r\n  removeFile : (contractId, fileName) => dispatch(removeFile(contractId, fileName)),\r\n  clearFileList : () => dispatch(clearFileList()),\r\n  updateFileList : (data) => dispatch(fileListLoaded(data)) \r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(reduxForm({\r\n  form:'ContractEdit',\r\n  validate,\r\n  enableReinitialize : true,\r\n  destroyOnUnmount: true\r\n})(ContractEdit))\r\n\r\n","import React, { Component, Fragment } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Link, Redirect } from 'react-router-dom'\r\nimport { Form, Input, Col, Icon, Button } from 'antd'\r\nimport { updateValue, createRow, clearRow, insertSetting, updateSetting } from '../../actions/SettingsActions'\r\n\r\nconst FormItem = Form.Item;\r\n\r\nconst formItemLayout = {\r\n  labelCol: {\r\n    xl: { span: 24 },\r\n    xs: { span: 24 },\r\n    sm: { span: 24 }\r\n  },\r\n  wrapperCol: {\r\n    xl: { span: 24 },\r\n    xs: { span: 24 },\r\n    sm: { span: 24 }\r\n  }\r\n};\r\n\r\nexport class SettingsEditor extends Component {\r\n\r\n    componentWillMount(){\r\n      const { match } = this.props;\r\n      console.log(match.params.type);\r\n    }\r\n\r\n    componentWillUnmount(){\r\n      const { clearRow } = this.props;\r\n      //Освобождаем стор для создания полей\r\n      clearRow();\r\n    }\r\n\r\n  render() {\r\n    const { user, settings, match, setFieldValue, createRow, performInsert, performUpdate } = this.props;\r\n    const values = settings.data[match.params.type];\r\n    console.log(settings.newData);\r\n    return (\r\n      <Fragment>\r\n        <div>\r\n          {settings.description[match.params.type].name}\r\n        </div>\r\n        <Col span={4}>\r\n          {values.map( (item, pos) =>\r\n            Object.keys(item).map((field, index) =>\r\n              field === 'id' ? \r\n              (<Input type=\"hidden\" key={index} name={field} value={values[pos][field]} />)\r\n                :\r\n              (<FormItem {...formItemLayout} key={index}>\r\n                  <Input \r\n                    style={{width:\"50%\", marginRight : \"10px\"}} \r\n                    type=\"text\"  \r\n                    name={field} \r\n                    value={values[pos][field]} \r\n                    onChange={(e) => setFieldValue(match.params.type, pos, field, e.target.value)}\r\n                  />\r\n                  <Button \r\n                    onClick={() => performUpdate(user.id, match.params.type, values[pos])}\r\n                    loading={settings.settingsUpdating}\r\n                    icon=\"edit\"\r\n                  >\r\n                    Изменить\r\n                  </Button>\r\n                </FormItem>\r\n              ),   \r\n            )\r\n          )}\r\n          <FormItem {...formItemLayout}>\r\n          { Object.keys(values[0]).map( (field, index) =>\r\n            field !== 'id' &&\r\n            (<Input type=\"text\" key={index} style={{width: \"50%\", marginRight : \"10px\"}} name={field} value={settings.newData[field]} onChange={(e) => createRow(match.params.type, field, e.target.value)} />)\r\n          )}\r\n              <Button \r\n                type=\"primary\" \r\n                disabled={Object.keys(settings.newData).length === 0 ? true : false} \r\n                onClick={() => performInsert(user.id, match.params.type, settings.newData)}\r\n                loading={settings.settingsUpdating}\r\n                icon=\"check\"\r\n              >\r\n                Добавить\r\n              </Button>\r\n          </FormItem>\r\n        </Col>\r\n      </Fragment>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user : state.user,\r\n  settings : state.settings\r\n})\r\n\r\nconst mapDispatchToProps =  (dispatch) => ({\r\n  setFieldValue : (itemType, itemPos, itemField, value) => dispatch(updateValue(itemType, itemPos, itemField, value)),\r\n  createRow : (itemType, itemField, value) => dispatch(createRow(itemType, itemField, value)),\r\n  clearRow : () => dispatch(clearRow()),\r\n  performInsert : (userId, settingType, values) => dispatch(insertSetting(userId, settingType, values)),\r\n  performUpdate : (userId, settingType, settings) => dispatch(updateSetting(userId, settingType, settings))\r\n})\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(SettingsEditor)\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport default function NotMatch() {\r\n  return (\r\n    <div>\r\n      Страница не найдена.\r\n      <Link to=\"/\">На главную</Link>\r\n    </div>\r\n  )\r\n}\r\n\r\n","import React, { Component } from 'react'\r\n\r\nexport default class HomePage extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        Компонент главной страницы.\r\n      </div>\r\n    )\r\n  }\r\n}\r\n","import React from 'react'\r\nimport { withRouter, Link } from 'react-router-dom'\r\nimport { Breadcrumb, Icon } from 'antd';\r\n\r\nconst menuMap = {\r\n    \"/users\" : \"Сотрудники\",\r\n    \"/users/edit\" : \"Редактировать сотрудника\",\r\n    \"/users/create\" : \"Создать нового сотрудника\",\r\n    \"/customers\" : \"Клиенты\",\r\n    \"/customers/edit\" : \"Редактировать клиента\",\r\n    \"/customers/createcustomer\" : \"Добавить клиента\",\r\n    \"/contracts\" : \"Заявления\",\r\n    \"/contracts/edit\" : \"Редактировать заявку\",\r\n    \"/contracts/create\" : \"Создать заявку\",\r\n    \"/settings\" : \"Настройки\",\r\n    \"/settings/work_types\" : \"Виды работ\",\r\n    \"/settings/user_roles\" : \"Виды ролей\",\r\n    \"/settings/status_types\" : \"Статусы заявлений\",\r\n}\r\n\r\n\r\n/**\r\n * Хлебные крошки приложения\r\n * @param props - location props from react-router\r\n */\r\nconst TopCrumbs = withRouter((props) => {\r\n    const { location } = props;\r\n    const pathSnippets = location.pathname.split('/').filter(i => i);\r\n    const extraBreadcrumbItems = pathSnippets.map((_, index) => {\r\n      let url = '';\r\n      if(index < 2){\r\n        url = `/${pathSnippets.slice(0, index + 1).join('/')}`;\r\n        return (\r\n          <Breadcrumb.Item key={url}>\r\n            <Link to={url}>\r\n              {menuMap[url]}\r\n            </Link>\r\n          </Breadcrumb.Item>\r\n        );\r\n      }\r\n    });\r\n    const breadcrumbItems = [(\r\n      <Breadcrumb.Item key=\"/\">\r\n        <Link to=\"/\">Главная</Link>\r\n      </Breadcrumb.Item>\r\n    )].concat(extraBreadcrumbItems);\r\n    return(\r\n        <Breadcrumb separator={<Icon type=\"right\" theme=\"outlined\" />}>\r\n            {breadcrumbItems}\r\n        </Breadcrumb>\r\n    )\r\n})\r\n\r\nexport default TopCrumbs;\r\n","import React, { Component } from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { Row, Card, Icon } from 'antd'\r\nimport  Preloader  from '../Preloader'\r\nimport { getSettings } from '../../actions/SettingsActions'\r\nimport { withRouter } from 'react-router'\r\nimport { Link } from 'react-router-dom'\r\n\r\nexport class SettingsList extends Component {\r\n\r\n  componentWillMount(){\r\n    const { loadSettings } = this.props;\r\n    loadSettings();\r\n\r\n  }\r\n\r\n  render() {\r\n    const { settings } = this.props;\r\n    const { Meta } = Card;\r\n    const keys = Object.keys(settings.data);\r\n    return (\r\n      <Row type=\"flex\" justify=\"start\" style={{flexWrap:\"wrap\"}}>\r\n        {settings.loading ? <Preloader/> :\r\n         keys.map( (setting, pos) =>\r\n          <Card\r\n            style={{ margin : \"15px\", width : \"300px\" }}\r\n            className=\"settings-card\"\r\n            key={pos}\r\n            actions={[<Link to={\"/settings/\"+ keys[pos] }><Icon type=\"setting\" /></Link>]}\r\n            hoverable={true}\r\n          >\r\n            <Meta\r\n              style={{minHeight : \"110px\"}}\r\n              title={settings.description[setting].name}\r\n              description={settings.description[setting].description}          \r\n            />\r\n          </Card>\r\n        )}\r\n      </Row>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n  user : state.user,\r\n  settings : state.settings\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  loadSettings : (userId) => dispatch(getSettings(userId)),\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(SettingsList))\r\n\r\n","export const GET_CONTRACT_NOTIFICATION = 'GET_CONTRACT_NOTIFICATION'\r\nexport const NOTIFICATION_VIEWED = 'NOTIFICATION_VIEWED'\r\n\r\nexport function recieveContractNotification(notificationData){\r\n  return {\r\n    type : GET_CONTRACT_NOTIFICATION,\r\n    notificationData\r\n  }\r\n}\r\n\r\nexport function notificatorViewed(){\r\n  return {\r\n    type : NOTIFICATION_VIEWED\r\n  }\r\n}","import React, { Component, Fragment } from 'react'\r\nimport { Switch, Route, Redirect, Link} from 'react-router-dom'\r\nimport { connect } from 'react-redux'\r\nimport { withRouter } from 'react-router'\r\n//import {openSocket, io} from 'socket.io-client';\r\nimport io from 'socket.io-client';\r\nimport Ws from '@adonisjs/websocket-client'\r\n\r\nimport AuthWindow from './AuthWindow'\r\nimport WorkSheet from './WorkSheet'\r\nimport LeftMenu from './LeftMenu'\r\nimport UsersList from './UsersList'\r\nimport LoggedUser from './small/LoggedUser'\r\nimport Notificator from './small/Notificator'\r\nimport CustomersList from './CustomersList'\r\nimport CreateContractForm from './forms/CreateContractForm'\r\nimport CustomerEdit from './forms/CustomerEdit'\r\nimport UserEdit from './forms/UserEdit'\r\nimport ContractEdit from './forms/ContractEdit';\r\nimport SettingsEditor from './forms/SettingsEditor'\r\nimport NotMatch from './NotMatch';\r\nimport HomePage from './HomePage';\r\nimport TopCrumbs from './TopCrumbs';\r\nimport SettingsList from './settings/SettingsList'\r\n\r\nimport { logout } from '../actions/LoginActions'\r\nimport { recieveContractNotification, notificatorViewed } from '../actions/NotificationsActions'\r\nimport { getUser, updatedUser } from '../actions/UserListActions'\r\n\r\nimport 'antd/dist/antd.css';\r\nimport { Layout, Icon, Row, Col, notification } from 'antd'\r\n\r\n\r\nconst { Header, Content } = Layout;\r\n//const socket = io('http://127.0.0.1:3333', {\r\n//  transports: ['polling','websocket']\r\n//});\r\n//const socket = io('http://localhost:3333', {\r\n//  path: '/test'\r\n//});\r\n\r\nconst ws = Ws('ws://127.0.0.1:3333')\r\n\r\n/**\r\n * Точка входа и роутинга в основные компоненты\r\n */\r\nclass MainOffice extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n        isLogged : false,\r\n        collapsed : false\r\n    }\r\n  }\r\n\r\n  tryToLogin = (data) => {\r\n    this.setState({\r\n        isLogged:true\r\n    }\r\n    );\r\n  }\r\n\r\n  toggle = () => {\r\n      this.setState({\r\n        collapsed: !this.state.collapsed,\r\n      });\r\n    }\r\n  componentWillMount(){\r\n    const { currentUser } = this.props;\r\n\r\n    if(currentUser){\r\n      const token = localStorage.getItem('app_token');\r\n      ws.withJwtToken(token).connect();\r\n      //ws.connect();\r\n      const contractsNotificator = ws.subscribe('contractsRoom')\r\n      //contractsNotificator.on('contractRecieved', (data) => {\r\n      //  console.log('recieve contract notification');\r\n      //  console.log(data);\r\n      //})\r\n      contractsNotificator.on('newContractData',(data) => {\r\n\r\n        console.log(data);\r\n        this.props.recieveContractNotification(data);\r\n        notification.open({\r\n          message : 'Новое уведомление',\r\n          description : data[0].message,\r\n          duration : 3\r\n        })\r\n      })\r\n    }\r\n\r\n    //socket.emit('ContractPush', this.props.currentUser.id)\r\n    //console.log(\"contract push \" + this.props.currentUser.id )\r\n    //socket.on('testEmit', (data) => {\r\n    //  console.log(`test emit, data : `);\r\n    //  console.log(data);\r\n    //})\r\n\r\n      //socket.on('updateContracts',(res)=>{\r\n      //  console.log('hey hey im socket event');\r\n      //  console.log(res);\r\n      //  this.props.recieveContractNotification(res);\r\n      //  //dispatch(initialItems(res))\r\n      //})\r\n  }\r\n\r\n  componentWillUnmount() {\r\n      //socket.emit('ContractDisconnect', this.props.currentUser.id)\r\n      console.log('component unmounted');\r\n      ws.emit('close');\r\n    \r\n    //console.log(\"Disconnecting Socket as component will unmount\");\r\n  }\r\n\r\n  handleProfileSubmit = values => {\r\n    this.props.changeProfileData(this.props.currentUser.id, values);\r\n  }\r\n\r\n\r\n  render(){\r\n    const { currentUser } = this.props;\r\n    //const st = this.props.location.state.from ? this.props.location.state.from : '/';\r\n    if(currentUser.loggedIn === false){\r\n        return (\r\n            <Fragment>\r\n                { this.props.location.pathname !==\"/login\" && <Redirect to={{\r\n                    pathname: \"/login\",\r\n                    state: { from: this.props.location }\r\n                  }}/>\r\n                }\r\n                <Route path=\"/login\" component={AuthWindow}/>\r\n            </Fragment>\r\n        )\r\n    }\r\n    return(\r\n      <Layout className=\"mainContainer\">\r\n        <LeftMenu collapsed={this.state.collapsed}/>\r\n        <Layout>\r\n          <Header className=\"header\" style={{ background: '#fff', padding: 0 }}>\r\n            <Row type=\"flex\" justify=\"space-between\" align=\"middle\">\r\n              <Col>\r\n                <div>\r\n                  <span className=\"badge-info ant-badge\">\r\n                    <Icon\r\n                      className=\"trigger\"\r\n                      type={this.state.collapsed ? 'menu-unfold' : 'menu-fold'}\r\n                      onClick={this.toggle}\r\n                      style={{ fontSize: 22, marginLeft:15,cursor:\"pointer\"}}\r\n                    />\r\n                  </span>\r\n                  <Notificator \r\n                  notifications={this.props.notifications.contractsNotifications}\r\n                  viewHandler={this.props.viewHandler}\r\n                  />\r\n                </div>\r\n              </Col>\r\n              <Col style={{marginRight:'15px'}}>\r\n                <LoggedUser\r\n                  user={this.props.currentUser}\r\n                  logOut={this.props.logout}\r\n                  loadProfile={this.props.getProfileData}\r\n                  onSubmit={this.handleProfileSubmit}\r\n                  ownProfile = {this.props.userProfile}\r\n                  isLoading = {this.props.isLoadingProfile}\r\n                />\r\n              </Col>\r\n            </Row>\r\n          </Header>\r\n          <Content style={{ margin: '24px 16px 16px 24px', padding: 24, background: '#fff' }}>\r\n            <div style={{padding:'15px'}}>\r\n              <TopCrumbs/>\r\n            </div>\r\n            <Switch>\r\n              {/* Пока главной страницы нет, редиректим с главной на /contracts а с /login на главную */}\r\n              <Redirect from =\"/login\" to={this.props.currentUser.referer}/>\r\n              <Redirect exact from=\"/\" to=\"/contracts\" />\r\n              <Route exact path=\"/\" component={HomePage}/>\r\n              \r\n              <Route exact path=\"/contracts\" component={WorkSheet} />\r\n              <Route path=\"/contracts/create\" component={CreateContractForm} />\r\n              <Route exact path=\"/contracts/edit/:id\" component={ContractEdit} />\r\n              <Route exact path=\"/users\" component={UsersList}/>\r\n              <Route exact path=\"/users/create\" component={UserEdit}/>\r\n              <Route exact path=\"/users/edit/:id\" component={UserEdit}/>\r\n              <Route exact path=\"/customers\" component={CustomersList}/>\r\n              <Route exact path=\"/customers/edit/:id\" component={CustomerEdit} />\r\n              <Route exact path=\"/customers/createcustomer\" component={CustomerEdit} />\r\n              <Route exact path=\"/settings\" component={SettingsList} />\r\n              <Route exact path=\"/settings/:type\" component={SettingsEditor} />\r\n              <Route component={NotMatch} />\r\n            </Switch>\r\n          </Content>\r\n        </Layout>\r\n      </Layout>      \r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = store =>{\r\n  return {\r\n    currentUser : store.user,\r\n    contracts : store.contracts,\r\n    notifications : store.notifications,\r\n    isLoadingProfile : store.userList.userIsLoading,\r\n    userProfile : store.userList.currentUserData,\r\n    settings : store.settings\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  logout : () => dispatch(logout()),\r\n  recieveContractNotification : (data) => dispatch(recieveContractNotification(data)),\r\n  getProfileData : (userId, profileId) => dispatch(getUser(userId, profileId)),\r\n  changeProfileData : (userId, formData) => dispatch(updatedUser(userId, formData)),\r\n  viewHandler : () => dispatch(notificatorViewed())\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(MainOffice));\r\n","import React, { Component } from 'react';\nimport { LocaleProvider } from 'antd';\nimport ru_RU from 'antd/lib/locale-provider/ru_RU';\nimport 'moment/locale/ru';\n\nimport MainOffice from './components/MainOffice';\nimport './App.css';\nimport './styles/animate.css';\n\n/**\n * Здесь подключается Локальный провайдер Ru-ru для Antd\n */\n\nclass App extends Component {\n  render() {\n    return (\n      <LocaleProvider locale={ru_RU}>\n        <MainOffice/>\n      </LocaleProvider>\n    );\n  }\n}\n\nexport default App;\n\n\n// ukn_backend npm start\n//ukn_frontend npm start\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { Provider } from 'react-redux';\nimport thunkMiddleware from 'redux-thunk';\nimport { createStore, applyMiddleware } from 'redux';\nimport { rootReducer } from './reducers/index'\n\nimport { BrowserRouter as Router} from 'react-router-dom'\nimport './index.css';\nimport App from './App';\nimport registerServiceWorker from './registerServiceWorker';\nimport createHistory from \"history/createBrowserHistory\"\n\nconst history = createHistory()\n\nconst store = createStore(rootReducer,applyMiddleware(thunkMiddleware));\n\nReactDOM.render(\n  <Provider store={store} history={history}>\n    <Router>\n      <App />\n    </Router>\n  </Provider>,\n  document.getElementById('root'));\nregisterServiceWorker();\n"],"sourceRoot":""}